root uml to uml2
Prefix uml to uml2
URI "http://www.eclipse.org/uml2/2.1.0/UML" to "http://www.eclipse.org/uml2/2.1.0/uml"

class {
	Comment to Comment {
		att body to body bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies a string that is the comment." to
				"Specifies a string that is the comment." }
			} ;
			"http:///org/eclipse/emf/ecore/util/ExtendedMetaData" to "http:///org/eclipse/emf/ecore/util/ExtendedMetaData"
			detailsEntry {
				kind to kind oldValue element to element }
			}
		}
		ref annotatedElement to annotatedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Element(s) being commented." to
				"References the Element(s) being commented." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A comment is a textual annotation that can be attached to a set of elements." to
			"A comment is a textual annotation that can be attached to a set of elements." }
		}
	} ;
	Element to Element {
		ref ownedElement to ownedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Elements owned by this element." to
				"The Elements owned by this element." }
			} ;
			union to union
		}
		ref owner to owner bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Element that owns this element." to
				"The Element that owns this element." }
			} ;
			union to union
		}
		ref ownedComment to ownedComment bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Comments owned by this element." to
				"The Comments owned by this element." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An element is a constituent of a model. As such, it has the capability of owning other elements." to
			"An element is a constituent of a model. As such, it has the capability of owning other elements." }
		}
	} ;
	Package to Package {
		ref ownedType to ownedType bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the packaged elements that are Types." to
				"References the packaged elements that are Types." }
			} ;
			subsets to subsets
		}
		ref packageMerge to packageMerge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the PackageMerges that are owned by this Package." to
				"References the PackageMerges that are owned by this Package." }
			} ;
			subsets to subsets
		}
		ref packagedElement to packagedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the packageable elements that are owned by this Package." to
				"Specifies the packageable elements that are owned by this Package." }
			} ;
			subsets to subsets
		}
		ref nestedPackage to nestedPackage bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the packaged elements that are Packages." to
				"References the packaged elements that are Packages." }
			} ;
			subsets to subsets
		}
		ref nestingPackage to nestingPackage bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Package that owns this Package." to
				"References the Package that owns this Package." }
			} ;
			subsets to subsets
		}
		ref profileApplication to profileApplication bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the ProfileApplications that indicate which profiles have been applied to the Package." to
				"References the ProfileApplications that indicate which profiles have been applied to the Package." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A package is used to group elements, and provides a namespace for the grouped elements.\r\nA package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.\r\nPackage specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter."
			to
			"A package is used to group elements, and provides a namespace for the grouped elements.\r\nA package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.\r\nPackage specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter."
			}
		} ;
		duplicates to duplicates
	} ;
	PackageableElement to PackageableElement
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A packageable element indicates a named element that may be owned directly by a package.\r\nPackageable elements are able to serve as a template parameter."
			to
			"A packageable element indicates a named element that may be owned directly by a package.\r\nPackageable elements are able to serve as a template parameter."
			}
		} ;
		duplicates to duplicates
	} ;
	NamedElement to NamedElement {
		att name to name bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The name of the NamedElement." to "The name of the NamedElement." }
			}
		}
		att visibility to visibility bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."
				to
				"Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."
				}
			}
		}
		att qualifiedName to qualifiedName bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."
				to
				"A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."
				}
			}
		}
		ref clientDependency to clientDependency bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates the dependencies that reference the client." to
				"Indicates the dependencies that reference the client." }
			}
		}
		ref namespace to namespace bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the namespace that owns the NamedElement." to
				"Specifies the namespace that owns the NamedElement." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref nameExpression to nameExpression bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The string expression used to define the name of this named element." to
				"The string expression used to define the name of this named element." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A named element is an element in a model that may have a name.\r\nA named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound)."
			to
			"A named element is an element in a model that may have a name.\r\nA named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound)."
			}
		}
	} ;
	Dependency to Dependency {
		ref supplier to supplier bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific."
				to
				"The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific."
				}
			} ;
			subsets to subsets
		}
		ref client to client bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation."
				to
				"The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s)."
			to
			"A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s)."
			}
		}
	} ;
	DirectedRelationship to DirectedRelationship {
		ref source to source bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the sources of the DirectedRelationship." to
				"Specifies the sources of the DirectedRelationship." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref target to target bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the targets of the DirectedRelationship." to
				"Specifies the targets of the DirectedRelationship." }
			} ;
			subsets to subsets ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."
			to
			"A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."
			}
		}
	} ;
	Relationship to Relationship {
		ref relatedElement to relatedElement bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the elements related by the Relationship." to
				"Specifies the elements related by the Relationship." }
			} ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Relationship is an abstract concept that specifies some kind of relationship between elements." to
			"Relationship is an abstract concept that specifies some kind of relationship between elements." }
		}
	} ;
	Namespace to Namespace {
		ref elementImport to elementImport bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the ElementImports owned by the Namespace." to
				"References the ElementImports owned by the Namespace." }
			} ;
			subsets to subsets
		}
		ref packageImport to packageImport bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the PackageImports owned by the Namespace." to
				"References the PackageImports owned by the Namespace." }
			} ;
			subsets to subsets
		}
		ref ownedRule to ownedRule bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies a set of Constraints owned by this Namespace." to
				"Specifies a set of Constraints owned by this Namespace." }
			} ;
			subsets to subsets
		}
		ref member to member bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."
				to
				"A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."
				}
			} ;
			union to union
		}
		ref importedMember to importedMember bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."
				to
				"References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."
				}
			} ;
			subsets to subsets
		}
		ref ownedMember to ownedMember bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A collection of NamedElements owned by the Namespace." to
				"A collection of NamedElements owned by the Namespace." }
			} ;
			subsets to subsets ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A namespace is an element in a model that contains a set of named elements that can be identified by name." to
			"A namespace is an element in a model that contains a set of named elements that can be identified by name." }
		}
	} ;
	ElementImport to ElementImport {
		att visibility to visibility bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import."
				to
				"Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import."
				}
			}
		}
		att alias to alias bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used."
				to
				"Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used."
				}
			}
		}
		ref importedElement to importedElement bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the PackageableElement whose name is to be added to a Namespace." to
				"Specifies the PackageableElement whose name is to be added to a Namespace." }
			} ;
			subsets to subsets
		}
		ref importingNamespace to importingNamespace bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the Namespace that imports a PackageableElement from another Package." to
				"Specifies the Namespace that imports a PackageableElement from another Package." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier."
			to
			"An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier."
			}
		}
	} ;
	PackageImport to PackageImport {
		att visibility to visibility bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not."
				to
				"Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not."
				}
			}
		}
		ref importedPackage to importedPackage bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the Package whose members are imported into a Namespace." to
				"Specifies the Package whose members are imported into a Namespace." }
			} ;
			subsets to subsets
		}
		ref importingNamespace to importingNamespace bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the Namespace that imports the members from a Package." to
				"Specifies the Namespace that imports the members from a Package." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces."
			to
			"A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces."
			}
		}
	} ;
	Constraint to Constraint {
		ref constrainedElement to constrainedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ordered set of Elements referenced by this Constraint." to
				"The ordered set of Elements referenced by this Constraint." }
			}
		}
		ref specification to specification bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A condition that must be true when evaluated in order for the constraint to be satisfied." to
				"A condition that must be true when evaluated in order for the constraint to be satisfied." }
			} ;
			subsets to subsets
		}
		ref context to context bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the namespace that owns the NamedElement." to
				"Specifies the namespace that owns the NamedElement." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element."
			to
			"A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element."
			}
		}
	} ;
	ValueSpecification to ValueSpecification
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.\r\nValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			to
			"A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.\r\nValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			}
		} ;
		duplicates to duplicates
	} ;
	TypedElement to TypedElement {
		ref type to type bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nThe type of the TypedElement." to
				"This information is derived from the return result for this Operation.\r\nThe type of the TypedElement." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A typed element is a kind of named element that represents an element with a type.\r\nA typed element has a type."
			to
			"A typed element is a kind of named element that represents an element with a type.\r\nA typed element has a type."
			}
		}
	} ;
	Type to Type {
		ref ^package to ^package bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the owning package of this classifier, if any." to
				"Specifies the owning package of this classifier, if any." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A type is a named element that is used as the type for a typed element. A type can be contained in a package.\r\nA type constrains the values represented by a typed element."
			to
			"A type is a named element that is used as the type for a typed element. A type can be contained in a package.\r\nA type constrains the values represented by a typed element."
			}
		}
	} ;
	Association to Association {
		ref ownedEnd to ownedEnd bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ends that are owned by the association itself." to
				"The ends that are owned by the association itself." }
			} ;
			subsets to subsets
		}
		ref memberEnd to memberEnd bounds (2,-1) to (2,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Each end represents participation of instances of the classifier connected to the end in links of the association."
				to
				"Each end represents participation of instances of the classifier connected to the end in links of the association."
				}
			} ;
			subsets to subsets
		}
		att isDerived to isDerived bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether the association is derived from other model elements such as other associations or constraints."
				to
				"Specifies whether the association is derived from other model elements such as other associations or constraints."
				}
			}
		}
		ref endType to endType bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the classifiers that are used as types of the ends of the association." to
				"References the classifiers that are used as types of the ends of the association." }
			} ;
			subsets to subsets
		}
		ref navigableOwnedEnd to navigableOwnedEnd bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The navigable ends that are owned by the association itself." to
				"The navigable ends that are owned by the association itself." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link."
			to
			"An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link."
			}
		}
	} ;
	Classifier to Classifier {
		att isAbstract to isAbstract bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.\r\n"
				to
				"If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.\r\n"
				}
			}
		}
		ref generalization to generalization bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy."
				to
				"Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy."
				}
			} ;
			subsets to subsets
		}
		ref powertypeExtent to powertypeExtent bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates the GeneralizationSet of which the associated Classifier is a power type." to
				"Designates the GeneralizationSet of which the associated Classifier is a power type." }
			}
		}
		ref feature to feature bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.\r\nSpecifies each feature defined in the classifier."
				to
				"Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.\r\nSpecifies each feature defined in the classifier."
				}
			} ;
			subsets to subsets ;
			union to union
		}
		ref inheritedMember to inheritedMember bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies all elements inherited by this classifier from the general classifiers." to
				"Specifies all elements inherited by this classifier from the general classifiers." }
			} ;
			subsets to subsets
		}
		ref redefinedClassifier to redefinedClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Classifiers that are redefined by this Classifier." to
				"References the Classifiers that are redefined by this Classifier." }
			} ;
			subsets to subsets
		}
		ref general to general bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the general classifier in the Generalization relationship.\r\nSpecifies the general Classifiers for this Classifier."
				to
				"References the general classifier in the Generalization relationship.\r\nSpecifies the general Classifiers for this Classifier."
				}
			}
		}
		ref substitution to substitution bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the substitutions that are owned by this Classifier." to
				"References the substitutions that are owned by this Classifier." }
			} ;
			subsets to subsets
		}
		ref attribute to attribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier."
				to
				"Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref representation to representation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References a collaboration use which indicates the collaboration that represents this classifier." to
				"References a collaboration use which indicates the collaboration that represents this classifier." }
			} ;
			subsets to subsets
		}
		ref collaborationUse to collaborationUse bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the collaboration uses owned by the classifier." to
				"References the collaboration uses owned by the classifier." }
			} ;
			subsets to subsets
		}
		ref ownedUseCase to ownedUseCase bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the use cases owned by this classifier." to
				"References the use cases owned by this classifier." }
			} ;
			subsets to subsets
		}
		ref useCase to useCase bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The set of use cases for which this Classifier is the subject." to
				"The set of use cases for which this Classifier is the subject." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.\r\nA classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.\r\nA classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.\r\nClassifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter."
			to
			"A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.\r\nA classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.\r\nA classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.\r\nClassifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter."
			}
		} ;
		duplicates to duplicates
	} ;
	RedefinableElement to RedefinableElement {
		att isLeaf to isLeaf bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement."
				to
				"Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement."
				}
			}
		}
		ref redefinedElement to redefinedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The redefinable element that is being redefined by this element." to
				"The redefinable element that is being redefined by this element." }
			} ;
			union to union
		}
		ref redefinitionContext to redefinitionContext bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the contexts that this element may be redefined from." to
				"References the contexts that this element may be redefined from." }
			} ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier."
			to
			"A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier."
			}
		}
	} ;
	TemplateableElement to TemplateableElement {
		ref templateBinding to templateBinding bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The optional bindings from this element to templates." to
				"The optional bindings from this element to templates." }
			} ;
			subsets to subsets
		}
		ref ownedTemplateSignature to ownedTemplateSignature bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The optional template signature specifying the formal template parameters." to
				"The optional template signature specifying the formal template parameters." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A templateable element is an element that can optionally be defined as a template and bound to other templates."
			to
			"A templateable element is an element that can optionally be defined as a template and bound to other templates." }
		}
	} ;
	TemplateBinding to TemplateBinding {
		ref signature to signature bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The template signature for the template that is the target of the binding." to
				"The template signature for the template that is the target of the binding." }
			} ;
			subsets to subsets
		}
		ref parameterSubstitution to parameterSubstitution bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The parameter substitutions owned by this template binding." to
				"The parameter substitutions owned by this template binding." }
			} ;
			subsets to subsets
		}
		ref boundElement to boundElement bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The element that is bound by this binding." to
				"The element that is bound by this binding." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A template binding represents a relationship between a templateable element and a template. A template binding specifies the substitutions of actual parameters for the formal parameters of the template."
			to
			"A template binding represents a relationship between a templateable element and a template. A template binding specifies the substitutions of actual parameters for the formal parameters of the template."
			}
		}
	} ;
	TemplateSignature to TemplateSignature {
		ref parameter to parameter bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The ordered set of all formal template parameters for this template signature." to
				"The ordered set of all formal template parameters for this template signature." }
			}
		}
		ref ownedParameter to ownedParameter bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The formal template parameters that are owned by this template signature." to
				"The formal template parameters that are owned by this template signature." }
			} ;
			subsets to subsets
		}
		ref template to template bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The element that owns this template signature." to
				"The element that owns this template signature." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A template signature bundles the set of formal template parameters for a templated element." to
			"A template signature bundles the set of formal template parameters for a templated element." }
		}
	} ;
	TemplateParameter to TemplateParameter {
		ref signature to signature bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The template signature that owns this template parameter." to
				"The template signature that owns this template parameter." }
			} ;
			subsets to subsets
		}
		ref parameteredElement to parameteredElement bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The element exposed by this template parameter." to
				"The element exposed by this template parameter." }
			}
		}
		ref ownedParameteredElement to ownedParameteredElement bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The element that is owned by this template parameter." to
				"The element that is owned by this template parameter." }
			} ;
			subsets to subsets
		}
		ref default to default bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The element that is the default for this formal template parameter." to
				"The element that is the default for this formal template parameter." }
			}
		}
		ref ownedDefault to ownedDefault bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The element that is owned by this template parameter for the purpose of providing a default." to
				"The element that is owned by this template parameter for the purpose of providing a default." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A template parameter exposes a parameterable element as a formal template parameter of a template." to
			"A template parameter exposes a parameterable element as a formal template parameter of a template." }
		}
	} ;
	ParameterableElement to ParameterableElement {
		ref owningTemplateParameter to owningTemplateParameter bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The formal template parameter that owns this element." to
				"The formal template parameter that owns this element." }
			} ;
			subsets to subsets
		}
		ref templateParameter to templateParameter bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The template parameter that exposes this element as a formal parameter."
				to "The template parameter that exposes this element as a formal parameter." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A parameterable element is an element that can be exposed as a formal template parameter for a template, or specified as an actual parameter in a binding of a template."
			to
			"A parameterable element is an element that can be exposed as a formal template parameter for a template, or specified as an actual parameter in a binding of a template."
			}
		}
	} ;
	TemplateParameterSubstitution to TemplateParameterSubstitution {
		ref formal to formal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The formal template parameter that is associated with this substitution."
				to "The formal template parameter that is associated with this substitution." }
			}
		}
		ref actual to actual bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The elements that are the actual parameters for this substitution." to
				"The elements that are the actual parameters for this substitution." }
			}
		}
		ref ownedActual to ownedActual bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The actual parameters that are owned by this substitution." to
				"The actual parameters that are owned by this substitution." }
			} ;
			subsets to subsets
		}
		ref templateBinding to templateBinding bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The optional bindings from this element to templates." to
				"The optional bindings from this element to templates." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A template parameter substitution relates the actual parameter(s) to a formal template parameter as part of a template binding."
			to
			"A template parameter substitution relates the actual parameter(s) to a formal template parameter as part of a template binding."
			}
		}
	} ;
	Generalization to Generalization {
		att isSubstitutable to isSubstitutable bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier."
				to
				"Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier."
				}
			}
		}
		ref general to general bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the general classifier in the Generalization relationship." to
				"References the general classifier in the Generalization relationship." }
			} ;
			subsets to subsets
		}
		ref generalizationSet to generalizationSet bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates a set in which instances of Generalization is considered members." to
				"Designates a set in which instances of Generalization is considered members." }
			}
		}
		ref specific to specific bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the specializing classifier in the Generalization relationship." to
				"References the specializing classifier in the Generalization relationship." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.\r\nA generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier."
			to
			"A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.\r\nA generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier."
			}
		}
	} ;
	GeneralizationSet to GeneralizationSet {
		att isCovering to isCovering bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."
				to
				"Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."
				}
			}
		}
		att isDisjoint to isDisjoint bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager."
				to
				"Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager."
				}
			}
		}
		ref powertype to powertype bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates the Classifier that is defined as the power type for the associated GeneralizationSet." to
				"Designates the Classifier that is defined as the power type for the associated GeneralizationSet." }
			}
		}
		ref generalization to generalization bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates the instances of Generalization which are members of a given GeneralizationSet." to
				"Designates the instances of Generalization which are members of a given GeneralizationSet." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A generalization set is a packageable element whose instances define collections of subsets of generalization relationships."
			to
			"A generalization set is a packageable element whose instances define collections of subsets of generalization relationships."
			}
		}
	} ;
	Feature to Feature {
		att isStatic to isStatic bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true)."
				to
				"Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true)."
				}
			}
		}
		ref featuringClassifier to featuringClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Classifiers that have this Feature as a feature." to
				"The Classifiers that have this Feature as a feature." }
			} ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A feature declares a behavioral or structural characteristic of instances of classifiers." to
			"A feature declares a behavioral or structural characteristic of instances of classifiers." }
		}
	} ;
	Substitution to Substitution {
		ref contract to contract bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The contract with which the substituting classifier complies." to
				"The contract with which the substituting classifier complies." }
			} ;
			subsets to subsets
		}
		ref substitutingClassifier to substitutingClassifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
				to
				"Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A substitution is a relationship between two classifiers signifies that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
			to
			"A substitution is a relationship between two classifiers signifies that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
			}
		}
	} ;
	Realization to Realization
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Realization is a specialized abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc."
			to
			"Realization is a specialized abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc."
			}
		}
	} ;
	Abstraction to Abstraction {
		ref mapping to mapping bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified."
				to
				"An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints."
			to
			"An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints."
			}
		}
	} ;
	OpaqueExpression to OpaqueExpression {
		att body to body bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The text of the expression, possibly in multiple languages." to
				"The text of the expression, possibly in multiple languages." }
			} ;
			"http:///org/eclipse/emf/ecore/util/ExtendedMetaData" to "http:///org/eclipse/emf/ecore/util/ExtendedMetaData"
			detailsEntry {
				kind to kind oldValue element to element }
			}
		}
		att language to language bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."
				to
				"Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."
				}
			}
		}
		ref result to result bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior."
				to
				"Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior."
				}
			}
		}
		ref behavior to behavior bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the behavior of the opaque expression." to
				"Specifies the behavior of the opaque expression." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.\r\nProvides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result."
			to
			"An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.\r\nProvides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result."
			}
		} ;
		duplicates to duplicates
	} ;
	Parameter to Parameter {
		ref parameterSet to parameterSet bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The parameter sets containing the parameter. See ParameterSet." to
				"The parameter sets containing the parameter. See ParameterSet." }
			}
		}
		ref operation to operation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Operation owning this parameter." to
				"References the Operation owning this parameter." }
			} ;
			subsets to subsets
		}
		att direction to direction bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether a parameter is being sent into or out of a behavioral element." to
				"Indicates whether a parameter is being sent into or out of a behavioral element." }
			}
		}
		att default to default bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies a String that represents a value to be used when no argument is supplied for the Parameter." to
				"Specifies a String that represents a value to be used when no argument is supplied for the Parameter." }
			}
		}
		ref defaultValue to defaultValue bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."
				to
				"Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."
				}
			} ;
			subsets to subsets
		}
		att isException to isException bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether an output parameter may emit a value to the exclusion of the other outputs." to
				"Tells whether an output parameter may emit a value to the exclusion of the other outputs." }
			}
		}
		att isStream to isStream bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing."
				to
				"Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing."
				}
			}
		}
		att effect to effect bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the effect that the owner of the parameter has on values passed in or out of the parameter." to
				"Specifies the effect that the owner of the parameter has on values passed in or out of the parameter." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.\r\nParameters are allowed to be treated as connectable elements.\r\nParameters have support for streaming, exceptions, and parameter sets."
			to
			"A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.\r\nParameters are allowed to be treated as connectable elements.\r\nParameters have support for streaming, exceptions, and parameter sets."
			}
		}
	} ;
	MultiplicityElement to MultiplicityElement {
		att isOrdered to isOrdered bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."
				to
				"For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."
				}
			}
		}
		att isUnique to isUnique bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."
				to
				"For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."
				}
			}
		}
		att upper to upper bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the upper bound of the multiplicity interval." to
				"Specifies the upper bound of the multiplicity interval." }
			}
		}
		att lower to lower bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the lower bound of the multiplicity interval." to
				"Specifies the lower bound of the multiplicity interval." }
			}
		}
		ref upperValue to upperValue bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specification of the upper bound for this multiplicity." to
				"The specification of the upper bound for this multiplicity." }
			} ;
			subsets to subsets
		}
		ref lowerValue to lowerValue bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specification of the lower bound for this multiplicity." to
				"The specification of the lower bound for this multiplicity." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."
			to
			"A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."
			}
		}
	} ;
	ConnectableElement to ConnectableElement {
		ref end to end bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Denotes a connector that attaches to this connectable element." to
				"Denotes a connector that attaches to this connectable element." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.\r\nA connectable element may be exposed as a connectable element template parameter."
			to
			"ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.\r\nA connectable element may be exposed as a connectable element template parameter."
			}
		} ;
		duplicates to duplicates
	} ;
	ConnectableElementTemplateParameter to ConnectableElementTemplateParameter
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A connectable element template parameter exposes a connectable element as a formal parameter for a template." to
			"A connectable element template parameter exposes a connectable element as a formal parameter for a template." }
		} ;
		duplicates to duplicates
	} ;
	ConnectorEnd to ConnectorEnd {
		ref definingEnd to definingEnd bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.\r\n"
				to
				"A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.\r\n"
				}
			}
		}
		ref partWithPort to partWithPort bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates the role of the internal structure of a classifier with the port to which the connector end is attached."
				to
				"Indicates the role of the internal structure of a classifier with the port to which the connector end is attached."
				}
			}
		}
		ref role to role bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.\r\n"
				to
				"The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.\r\n"
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector."
			to
			"A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector."
			}
		}
	} ;
	Property to Property {
		ref ^class to ^class bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Class that owns the Property." to
				"References the Class that owns the Property." }
			} ;
			subsets to subsets
		}
		ref datatype to datatype bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The DataType that owns this Property." to
				"The DataType that owns this Property." }
			} ;
			subsets to subsets
		}
		att isDerived to isDerived bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If isDerived is true, the value of the attribute is derived from information elsewhere.\r\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other information."
				to
				"If isDerived is true, the value of the attribute is derived from information elsewhere.\r\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other information."
				}
			}
		}
		att isDerivedUnion to isDerivedUnion bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether the property is derived as the union of all of the properties that are constrained to subset it."
				to
				"Specifies whether the property is derived as the union of all of the properties that are constrained to subset it."
				}
			}
		}
		att default to default bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies a String that represents a value to be used when no argument is supplied for the Property.\r\nA String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."
				to
				"Specifies a String that represents a value to be used when no argument is supplied for the Property.\r\nA String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."
				}
			}
		}
		att aggregation to aggregation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the kind of aggregation that applies to the Property." to
				"Specifies the kind of aggregation that applies to the Property." }
			}
		}
		att isComposite to isComposite bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.\r\nThis is a derived value, indicating whether the aggregation of the Property is composite or not."
				to
				"If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.\r\nThis is a derived value, indicating whether the aggregation of the Property is composite or not."
				}
			}
		}
		ref redefinedProperty to redefinedProperty bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the properties that are redefined by this property." to
				"References the properties that are redefined by this property." }
			} ;
			subsets to subsets
		}
		ref owningAssociation to owningAssociation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the owning association of this property, if any." to
				"References the owning association of this property, if any." }
			} ;
			subsets to subsets
		}
		ref defaultValue to defaultValue bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."
				to
				"A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."
				}
			} ;
			subsets to subsets
		}
		ref opposite to opposite bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."
				to
				"In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."
				}
			}
		}
		ref subsettedProperty to subsettedProperty bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the properties of which this property is constrained to be a subset." to
				"References the properties of which this property is constrained to be a subset." }
			}
		}
		ref association to association bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the association of which this property is a member, if any."
				to "References the association of which this property is a member, if any." }
			}
		}
		ref qualifier to qualifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified."
				to
				"An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified."
				}
			} ;
			subsets to subsets
		}
		ref associationEnd to associationEnd bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Designates the optional association end that owns a qualifier attribute."
				to "Designates the optional association end that owns a qualifier attribute." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.\r\nA property represents a set of instances that are owned by a containing classifier instance.\r\nA property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.\r\nProperty represents a declared state of one or more instances in terms of a named relationship to a value   or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property\'s type.\r\nProperty specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			to
			"A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.\r\nA property represents a set of instances that are owned by a containing classifier instance.\r\nA property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.\r\nProperty represents a declared state of one or more instances in terms of a named relationship to a value   or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property\'s type.\r\nProperty specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			}
		} ;
		duplicates to duplicates
	} ;
	DeploymentTarget to DeploymentTarget {
		ref deployment to deployment bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The set of Deployments for a DeploymentTarget." to
				"The set of Deployments for a DeploymentTarget." }
			} ;
			subsets to subsets
		}
		ref deployedElement to deployedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget." to
				"The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A deployment target is the location for a deployed artifact." to
			"A deployment target is the location for a deployed artifact." }
		}
	} ;
	Deployment to Deployment {
		ref deployedArtifact to deployedArtifact bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The Artifacts that are deployed onto a Node. This association specializes the supplier association." to
				"The Artifacts that are deployed onto a Node. This association specializes the supplier association." }
			} ;
			subsets to subsets
		}
		ref configuration to configuration bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The specification of properties that parameterize the deployment and execution of one or more Artifacts." to
				"The specification of properties that parameterize the deployment and execution of one or more Artifacts." }
			} ;
			subsets to subsets
		}
		ref location to location bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The DeployedTarget which is the target of a Deployment." to
				"The DeployedTarget which is the target of a Deployment." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A deployment is the allocation of an artifact or artifact instance to a deployment target.\r\nA component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files."
			to
			"A deployment is the allocation of an artifact or artifact instance to a deployment target.\r\nA component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files."
			}
		}
	} ;
	DeployedArtifact to DeployedArtifact
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target." to
			"A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target." }
		}
	} ;
	DeploymentSpecification to DeploymentSpecification {
		att deploymentLocation to deploymentLocation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The location where an Artifact is deployed onto a Node. This is typically a \'directory\' or \'memory address\'."
				to
				"The location where an Artifact is deployed onto a Node. This is typically a \'directory\' or \'memory address\'."
				}
			}
		}
		att executionLocation to executionLocation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The location where a component Artifact executes. This may be a local or remote location." to
				"The location where a component Artifact executes. This may be a local or remote location." }
			}
		}
		ref deployment to deployment bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The deployment with which the DeploymentSpecification is associated." to
				"The deployment with which the DeploymentSpecification is associated." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor."
			to
			"A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor."
			}
		}
	} ;
	Artifact to Artifact {
		att fileName to fileName bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator."
				to
				"A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator."
				}
			}
		}
		ref nestedArtifact to nestedArtifact bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The Artifacts that are defined (nested) within the Artifact.\r\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\r\n"
				to
				"The Artifacts that are defined (nested) within the Artifact.\r\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref manifestation to manifestation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact."
				to
				"The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact."
				}
			} ;
			subsets to subsets
		}
		ref ownedOperation to ownedOperation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The Operations defined for the Artifact. The association is a specialization of the ownedMember association." to
				"The Operations defined for the Artifact. The association is a specialization of the ownedMember association." }
			} ;
			subsets to subsets
		}
		ref ownedAttribute to ownedAttribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The attributes or association ends defined for the Artifact.\r\nThe association is a specialization of the ownedMember association.\r\n"
				to
				"The attributes or association ends defined for the Artifact.\r\nThe association is a specialization of the ownedMember association.\r\n"
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.\r\nAn artifact is the source of a deployment to a node."
			to
			"An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.\r\nAn artifact is the source of a deployment to a node."
			}
		}
	} ;
	Manifestation to Manifestation {
		ref utilizedElement to utilizedElement bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The model element that is utilized in the manifestation in an Artifact."
				to "The model element that is utilized in the manifestation in an Artifact." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A manifestation is the concrete physical rendering of one or more model elements by an artifact." to
			"A manifestation is the concrete physical rendering of one or more model elements by an artifact." }
		}
	} ;
	Operation to Operation {
		ref interface to interface bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Interface that owns this Operation." to
				"The Interface that owns this Operation." }
			} ;
			subsets to subsets
		}
		ref ^class to ^class bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The class that owns the operation." to
				"The class that owns the operation." }
			} ;
			subsets to subsets
		}
		att isQuery to isQuery bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."
				to
				"Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."
				}
			}
		}
		att isOrdered to isOrdered bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nSpecifies whether the return parameter is ordered or not, if present."
				to
				"This information is derived from the return result for this Operation.\r\nSpecifies whether the return parameter is ordered or not, if present."
				}
			}
		}
		att isUnique to isUnique bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nSpecifies whether the return parameter is unique or not, if present."
				to
				"This information is derived from the return result for this Operation.\r\nSpecifies whether the return parameter is unique or not, if present."
				}
			}
		}
		att lower to lower bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nSpecifies the lower multiplicity of the return parameter, if present."
				to
				"This information is derived from the return result for this Operation.\r\nSpecifies the lower multiplicity of the return parameter, if present."
				}
			}
		}
		att upper to upper bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nSpecifies the upper multiplicity of the return parameter, if present."
				to
				"This information is derived from the return result for this Operation.\r\nSpecifies the upper multiplicity of the return parameter, if present."
				}
			}
		}
		ref precondition to precondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional set of Constraints on the state of the system when the Operation is invoked." to
				"An optional set of Constraints on the state of the system when the Operation is invoked." }
			} ;
			subsets to subsets
		}
		ref postcondition to postcondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional set of Constraints specifying the state of the system when the Operation is completed." to
				"An optional set of Constraints specifying the state of the system when the Operation is completed." }
			} ;
			subsets to subsets
		}
		ref redefinedOperation to redefinedOperation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Operations that are redefined by this Operation." to
				"References the Operations that are redefined by this Operation." }
			} ;
			subsets to subsets
		}
		ref datatype to datatype bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The DataType that owns this Operation." to
				"The DataType that owns this Operation." }
			} ;
			subsets to subsets
		}
		ref bodyCondition to bodyCondition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional Constraint on the result values of an invocation of this Operation." to
				"An optional Constraint on the result values of an invocation of this Operation." }
			} ;
			subsets to subsets
		}
		ref type to type bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This information is derived from the return result for this Operation.\r\nSpecifies the return result of the operation, if present."
				to
				"This information is derived from the return result for this Operation.\r\nSpecifies the return result of the operation, if present."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.\r\nAn operation may invoke both the execution of method behaviors as well as other behavioral responses.\r\nOperation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			to
			"An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.\r\nAn operation may invoke both the execution of method behaviors as well as other behavioral responses.\r\nOperation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
			}
		} ;
		duplicates to duplicates
	} ;
	BehavioralFeature to BehavioralFeature {
		ref ownedParameter to ownedParameter bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the ordered set of formal parameters of this BehavioralFeature." to
				"Specifies the ordered set of formal parameters of this BehavioralFeature." }
			} ;
			subsets to subsets
		}
		att isAbstract to isAbstract bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element."
				to
				"If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element."
				}
			}
		}
		ref method to method bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior)."
				to
				"A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior)."
				}
			}
		}
		att concurrency to concurrency bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features."
				to
				"Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features."
				}
			}
		}
		ref raisedException to raisedException bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Types representing exceptions that may be raised during an invocation of this feature.\r\nThe signals that the behavioral feature raises as exceptions."
				to
				"References the Types representing exceptions that may be raised during an invocation of this feature.\r\nThe signals that the behavioral feature raises as exceptions."
				}
			}
		}
		ref ownedParameterSet to ownedParameterSet bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ParameterSets owned by this BehavioralFeature." to
				"The ParameterSets owned by this BehavioralFeature." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.\r\nA behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.\r\nA behavioral feature owns zero or more parameter sets."
			to
			"A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.\r\nA behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.\r\nA behavioral feature owns zero or more parameter sets."
			}
		} ;
		duplicates to duplicates
	} ;
	Behavior to Behavior {
		att isReentrant to isReentrant bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether the behavior can be invoked while it is still executing from a previous invocation." to
				"Tells whether the behavior can be invoked while it is still executing from a previous invocation." }
			}
		}
		ref redefinedBehavior to redefinedBehavior bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior."
				to
				"References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior."
				}
			} ;
			subsets to subsets
		}
		ref ownedParameter to ownedParameter bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.\r\n"
				to
				"References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref context to context bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior."
				to
				"The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior."
				}
			} ;
			subsets to subsets
		}
		ref precondition to precondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional set of Constraints specifying what must be fulfilled when the behavior is invoked." to
				"An optional set of Constraints specifying what must be fulfilled when the behavior is invoked." }
			} ;
			subsets to subsets
		}
		ref postcondition to postcondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional set of Constraints specifying what is fulfilled after the execution of the behavior is completed, if its precondition was fulfilled before its invocation."
				to
				"An optional set of Constraints specifying what is fulfilled after the execution of the behavior is completed, if its precondition was fulfilled before its invocation."
				}
			} ;
			subsets to subsets
		}
		ref ownedParameterSet to ownedParameterSet bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ParameterSets owned by this Behavior." to
				"The ParameterSets owned by this Behavior." }
			} ;
			subsets to subsets
		}
		ref specification to specification bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole)."
				to
				"Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole)."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\r\nA behavior owns zero or more parameter sets."
			to
			"Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\r\nA behavior owns zero or more parameter sets."
			}
		}
	} ;
	Class to Class {
		ref nestedClassifier to nestedClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References all the Classifiers that are defined (nested) within the Class." to
				"References all the Classifiers that are defined (nested) within the Class." }
			} ;
			subsets to subsets
		}
		ref ownedOperation to ownedOperation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The operations owned by the class." to
				"The operations owned by the class." }
			} ;
			subsets to subsets
		}
		ref superClass to superClass bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "This gives the superclasses of a class." to
				"This gives the superclasses of a class." }
			} ;
			redefines to redefines
		}
		att isActive to isActive bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class."
				to
				"Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class."
				}
			}
		}
		ref ownedReception to ownedReception bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Receptions that objects of this class are willing to accept." to
				"Receptions that objects of this class are willing to accept." }
			} ;
			subsets to subsets
		}
		ref extension to extension bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class."
				to
				"References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A class describes a set of objects that share the same specifications of features, constraints, and semantics.\r\nA class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.\r\nA class has the capability to have an internal structure and ports.\r\nClass has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes."
			to
			"A class describes a set of objects that share the same specifications of features, constraints, and semantics.\r\nA class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.\r\nA class has the capability to have an internal structure and ports.\r\nClass has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes."
			}
		} ;
		duplicates to duplicates
	} ;
	BehavioredClassifier to BehavioredClassifier {
		ref ownedBehavior to ownedBehavior bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References behavior specifications owned by a classifier." to
				"References behavior specifications owned by a classifier." }
			} ;
			subsets to subsets
		}
		ref classifierBehavior to classifierBehavior bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A behavior specification that specifies the behavior of the classifier itself." to
				"A behavior specification that specifies the behavior of the classifier itself." }
			} ;
			subsets to subsets
		}
		ref interfaceRealization to interfaceRealization bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation."
				to
				"The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation."
				}
			} ;
			subsets to subsets
		}
		ref ownedTrigger to ownedTrigger bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References Trigger descriptions owned by a Classifier." to
				"References Trigger descriptions owned by a Classifier." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A behaviored classifier may have an interface realization.\r\nA classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself."
			to
			"A behaviored classifier may have an interface realization.\r\nA classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself."
			}
		}
	} ;
	InterfaceRealization to InterfaceRealization {
		ref contract to contract bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Interface specifying the conformance contract." to
				"References the Interface specifying the conformance contract." }
			} ;
			subsets to subsets
		}
		ref implementingClassifier to implementingClassifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points)."
				to
				"References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points)."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interface realization is a specialized realization relationship between a classifier and an interface. This relationship signifies that the realizing classifier conforms to the contract specified by the interface."
			to
			"An interface realization is a specialized realization relationship between a classifier and an interface. This relationship signifies that the realizing classifier conforms to the contract specified by the interface."
			}
		}
	} ;
	Interface to Interface {
		ref ownedAttribute to ownedAttribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The attributes (i.e. the properties) owned by the class." to
				"The attributes (i.e. the properties) owned by the class." }
			} ;
			subsets to subsets
		}
		ref ownedOperation to ownedOperation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The operations owned by the class." to
				"The operations owned by the class." }
			} ;
			subsets to subsets
		}
		ref nestedClassifier to nestedClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References all the Classifiers that are defined (nested) within the Class." to
				"References all the Classifiers that are defined (nested) within the Class." }
			} ;
			subsets to subsets
		}
		ref redefinedInterface to redefinedInterface bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References all the Interfaces redefined by this Interface." to
				"References all the Interfaces redefined by this Interface." }
			} ;
			subsets to subsets
		}
		ref ownedReception to ownedReception bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Receptions that objects providing this interface are willing to accept."
				to "Receptions that objects providing this interface are willing to accept." }
			} ;
			subsets to subsets
		}
		ref protocol to protocol bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface."
				to
				"References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.\r\nInterfaces may include receptions (in addition to operations).\r\nSince an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface."
			to
			"An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.\r\nInterfaces may include receptions (in addition to operations).\r\nSince an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface."
			}
		}
	} ;
	Reception to Reception {
		ref signal to signal bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The signal that this reception handles." to
				"The signal that this reception handles." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A reception is a declaration stating that a classifier is prepared to react to the receipt of a signal. A reception designates a signal and specifies the expected behavioral response. The details of handling a signal are specified by the behavior associated with the reception or the classifier itself."
			to
			"A reception is a declaration stating that a classifier is prepared to react to the receipt of a signal. A reception designates a signal and specifies the expected behavioral response. The details of handling a signal are specified by the behavior associated with the reception or the classifier itself."
			}
		}
	} ;
	Signal to Signal {
		ref ownedAttribute to ownedAttribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The attributes owned by the signal." to
				"The attributes owned by the signal." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A signal is a specification of send request instances communicated between objects. The receiving object handles the received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined independently of the classifiers handling the signal occurrence."
			to
			"A signal is a specification of send request instances communicated between objects. The receiving object handles the received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined independently of the classifiers handling the signal occurrence."
			}
		}
	} ;
	ProtocolStateMachine to ProtocolStateMachine {
		ref conformance to conformance bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Conformance between protocol state machines." to
				"Conformance between protocol state machines." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier\'s operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence."
			to
			"A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier\'s operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence."
			}
		} ;
		duplicates to duplicates
	} ;
	StateMachine to StateMachine {
		ref region to region bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The regions owned directly by the state machine." to
				"The regions owned directly by the state machine." }
			} ;
			subsets to subsets
		}
		ref submachineState to submachineState bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state."
				to
				"References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state."
				}
			}
		}
		ref connectionPoint to connectionPoint bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state."
				to
				"The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state."
				}
			} ;
			subsets to subsets
		}
		ref extendedStateMachine to extendedStateMachine bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The state machines of which this is an extension." to
				"The state machines of which this is an extension." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine."
			to
			"State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine."
			}
		} ;
		duplicates to duplicates
	} ;
	Region to Region {
		ref subvertex to subvertex bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The set of vertices that are owned by this region." to
				"The set of vertices that are owned by this region." }
			} ;
			subsets to subsets
		}
		ref transition to transition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state."
				to
				"The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state."
				}
			} ;
			subsets to subsets
		}
		ref state to state bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine."
				to
				"The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine."
				}
			} ;
			subsets to subsets
		}
		ref extendedRegion to extendedRegion bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The region of which this region is an extension." to
				"The region of which this region is an extension." }
			} ;
			subsets to subsets
		}
		ref stateMachine to stateMachine bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State."
				to
				"The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions."
			to
			"A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions."
			}
		} ;
		duplicates to duplicates
	} ;
	Vertex to Vertex {
		ref incoming to incoming bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the transitions entering this vertex." to
				"Specifies the transitions entering this vertex." }
			}
		}
		ref outgoing to outgoing bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the transitions departing from this vertex." to
				"Specifies the transitions departing from this vertex." }
			}
		}
		ref container to container bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The region that contains this vertex." to
				"The region that contains this vertex." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions."
			to
			"A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions."
			}
		}
	} ;
	Transition to Transition {
		att kind to kind bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates  the precise type of the transition." to
				"Indicates  the precise type of the transition." }
			}
		}
		ref container to container bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Designates the region that owns this transition." to
				"Designates the region that owns this transition." }
			} ;
			subsets to subsets
		}
		ref redefinedTransition to redefinedTransition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The transition that is redefined by this transition." to
				"The transition that is redefined by this transition." }
			} ;
			subsets to subsets
		}
		ref guard to guard bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed."
				to
				"A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed."
				}
			} ;
			subsets to subsets
		}
		ref effect to effect bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies an optional behavior to be performed when the transition fires." to
				"Specifies an optional behavior to be performed when the transition fires." }
			} ;
			subsets to subsets
		}
		ref trigger to trigger bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the triggers that may fire the transition." to
				"Specifies the triggers that may fire the transition." }
			}
		}
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates the target vertex that is reached when the transition is taken." to
				"Designates the target vertex that is reached when the transition is taken." }
			}
		}
		ref source to source bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Designates the originating vertex (state or pseudostate) of the transition." to
				"Designates the originating vertex (state or pseudostate) of the transition." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type."
			to
			"A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type."
			}
		} ;
		duplicates to duplicates
	} ;
	Trigger to Trigger {
		ref event to event bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The event that causes the trigger." to
				"The event that causes the trigger." }
			}
		}
		ref port to port bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A optional port of the receiver object on which the behavioral feature is invoked." to
				"A optional port of the receiver object on which the behavioral feature is invoked." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A trigger relates an event to a behavior that may affect an instance of the classifier.\r\nA trigger specification may be qualified by the port on which the event occurred."
			to
			"A trigger relates an event to a behavior that may affect an instance of the classifier.\r\nA trigger specification may be qualified by the port on which the event occurred."
			}
		}
	} ;
	Event to Event
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An event is the specification of some occurrence that may potentially trigger effects by an object." to
			"An event is the specification of some occurrence that may potentially trigger effects by an object." }
		}
	} ;
	Port to Port {
		att isBehavior to isBehavior bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether requests arriving at this port are sent to the classifier behavior of this classifier. Such ports are referred to as behavior port. Any invocation of a behavioral feature targeted at a behavior port will be handled by the instance of the owning classifier itself, rather than by any instances that this classifier may contain."
				to
				"Specifies whether requests arriving at this port are sent to the classifier behavior of this classifier. Such ports are referred to as behavior port. Any invocation of a behavioral feature targeted at a behavior port will be handled by the instance of the owning classifier itself, rather than by any instances that this classifier may contain."
				}
			}
		}
		att isService to isService bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true indicates that this port is used to provide the published functionality of a classifier; if false, this port is used to implement the classifier but is not part of the essential externally-visible functionality of the classifier and can, therefore, be altered or deleted along with the internal implementation of the classifier and other properties that are considered part of its implementation."
				to
				"If true indicates that this port is used to provide the published functionality of a classifier; if false, this port is used to implement the classifier but is not part of the essential externally-visible functionality of the classifier and can, therefore, be altered or deleted along with the internal implementation of the classifier and other properties that are considered part of its implementation."
				}
			}
		}
		ref required to required bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the interfaces specifying the set of operations and receptions which the classifier expects its environment to handle. This association is derived as the set of interfaces required by the type of the port or its supertypes."
				to
				"References the interfaces specifying the set of operations and receptions which the classifier expects its environment to handle. This association is derived as the set of interfaces required by the type of the port or its supertypes."
				}
			}
		}
		ref redefinedPort to redefinedPort bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A port may be redefined when its containing classifier is specialized. The redefining port may have additional interfaces to those that are associated with the redefined port or it may replace an interface by one of its subtypes."
				to
				"A port may be redefined when its containing classifier is specialized. The redefining port may have additional interfaces to those that are associated with the redefined port or it may replace an interface by one of its subtypes."
				}
			} ;
			subsets to subsets
		}
		ref provided to provided bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.\r\n"
				to
				"References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.\r\n"
				}
			}
		}
		ref protocol to protocol bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References an optional protocol state machine which describes valid interactions at this interaction point." to
				"References an optional protocol state machine which describes valid interactions at this interaction point." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A port is a property of a classifier that specifies a distinct interaction point between that classifier and its environment or between the (behavior of the) classifier and its internal parts. Ports are connected to properties of the classifier by connectors through which requests can be made to invoke the behavioral features of a classifier. A Port may specify the services a classifier provides (offers) to its environment as well as the services that a classifier expects (requires) of its environment.\r\nA port has an associated protocol state machine."
			to
			"A port is a property of a classifier that specifies a distinct interaction point between that classifier and its environment or between the (behavior of the) classifier and its internal parts. Ports are connected to properties of the classifier by connectors through which requests can be made to invoke the behavioral features of a classifier. A Port may specify the services a classifier provides (offers) to its environment as well as the services that a classifier expects (requires) of its environment.\r\nA port has an associated protocol state machine."
			}
		}
	} ;
	State to State {
		att isComposite to isComposite bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region."
				to
				"A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region."
				}
			}
		}
		att isOrthogonal to isOrthogonal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions."
				to
				"A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions."
				}
			}
		}
		att isSimple to isSimple bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine."
				to
				"A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine."
				}
			}
		}
		att isSubmachineState to isSubmachineState bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine)."
				to
				"A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine)."
				}
			}
		}
		ref submachine to submachine bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The state machine that is to be inserted in place of the (submachine) state." to
				"The state machine that is to be inserted in place of the (submachine) state." }
			}
		}
		ref connection to connection bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate."
				to
				"The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate."
				}
			} ;
			subsets to subsets
		}
		ref connectionPoint to connectionPoint bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states."
				to
				"The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states."
				}
			} ;
			subsets to subsets
		}
		ref redefinedState to redefinedState bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The state of which this state is a redefinition." to
				"The state of which this state is a redefinition." }
			} ;
			subsets to subsets
		}
		ref stateInvariant to stateInvariant bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.\r\n"
				to
				"Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref entry to entry bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\r\n"
				to
				"An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref exit to exit bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution."
				to
				"An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution."
				}
			} ;
			subsets to subsets
		}
		ref doActivity to doActivity bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first."
				to
				"An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first."
				}
			} ;
			subsets to subsets
		}
		ref deferrableTrigger to deferrableTrigger bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.\r\n"
				to
				"A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.\r\n"
				}
			}
		}
		ref region to region bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The regions owned directly by the state." to
				"The regions owned directly by the state." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A state models a situation during which some (usually implicit) invariant condition holds.\r\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration."
			to
			"A state models a situation during which some (usually implicit) invariant condition holds.\r\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration."
			}
		} ;
		duplicates to duplicates
	} ;
	ConnectionPointReference to ConnectionPointReference {
		ref entry to entry bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The entryPoint kind pseudo states corresponding to this connection point." to
				"The entryPoint kind pseudo states corresponding to this connection point." }
			}
		}
		ref exit to exit bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The exitPoints kind pseudo states corresponding to this connection point." to
				"The exitPoints kind pseudo states corresponding to this connection point." }
			}
		}
		ref state to state bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The State in which the connection point refreshens are defined." to
				"The State in which the connection point refreshens are defined." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A connection point reference represents a usage (as part of a submachine state) of an entry/exit point defined in the statemachine reference by the submachine state."
			to
			"A connection point reference represents a usage (as part of a submachine state) of an entry/exit point defined in the statemachine reference by the submachine state."
			}
		}
	} ;
	Pseudostate to Pseudostate {
		att kind to kind bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice."
				to
				"Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice."
				}
			}
		}
		ref stateMachine to stateMachine bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint."
				to
				"The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint."
				}
			} ;
			subsets to subsets
		}
		ref state to state bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The State that owns this pseudostate and in which it appears." to
				"The State that owns this pseudostate and in which it appears." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A pseudostate is an abstraction that encompasses different types of transient vertices in the state machine graph."
			to
			"A pseudostate is an abstraction that encompasses different types of transient vertices in the state machine graph."
			}
		}
	} ;
	ProtocolConformance to ProtocolConformance {
		ref generalMachine to generalMachine bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the protocol state machine to which the specific state machine conforms." to
				"Specifies the protocol state machine to which the specific state machine conforms." }
			} ;
			subsets to subsets
		}
		ref specificMachine to specificMachine bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the state machine which conforms to the general state machine."
				to "Specifies the state machine which conforms to the general state machine." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines. Protocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine."
			to
			"Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines. Protocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine."
			}
		}
	} ;
	EncapsulatedClassifier to EncapsulatedClassifier {
		ref ownedPort to ownedPort bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References a set of ports that an encapsulated classifier owns." to
				"References a set of ports that an encapsulated classifier owns." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A classifier has the ability to own ports as specific and type checked interaction points." to
			"A classifier has the ability to own ports as specific and type checked interaction points." }
		}
	} ;
	StructuredClassifier to StructuredClassifier {
		ref ownedAttribute to ownedAttribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the properties owned by the classifier." to
				"References the properties owned by the classifier." }
			} ;
			subsets to subsets
		}
		ref part to part bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true."
				to
				"References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true."
				}
			}
		}
		ref role to role bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the roles that instances may play in this classifier." to
				"References the roles that instances may play in this classifier." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref ownedConnector to ownedConnector bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the connectors owned by the classifier." to
				"References the connectors owned by the classifier." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances."
			to
			"A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances."
			}
		}
	} ;
	Connector to Connector {
		ref type to type bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An optional association that specifies the link corresponding to this connector." to
				"An optional association that specifies the link corresponding to this connector." }
			}
		}
		ref redefinedConnector to redefinedConnector bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector. The types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced."
				to
				"A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector. The types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced."
				}
			} ;
			subsets to subsets
		}
		ref end to end bounds (2,-1) to (2,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered."
				to
				"A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered."
				}
			} ;
			subsets to subsets
		}
		att kind to kind bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates the kind of connector." to "Indicates the kind of connector." }
			}
		}
		ref contract to contract bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of Behaviors that specify the valid interaction patterns across the connector." to
				"The set of Behaviors that specify the valid interaction patterns across the connector." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Specifies a link that enables communication between two or more instances. This link may be an instance of an association, or it may represent the possibility of the instances being able to communicate because their identities are known by virtue of being passed in as parameters, held in variables or slots, or because the communicating instances are the same instance. The link may be realized by something as simple as a pointer or by something as complex as a network connection. In contrast to associations, which specify links between any instance of the associated classifiers, connectors specify links between instances playing the connected parts only.\r\nA delegation connector is a connector that links the external contract of a component (as specified by its ports) to the internal realization of that behavior by the component\'s parts. It represents the forwarding of signals (operation requests and events): a signal that arriv  es at a port that has a delegation connector to a part or to another port will be passed on to that target for handling.\r\nAn assembly connector is a connector between two components that defines that one component provides the services that another component requires. An assembly connector is a connector that is defined from a required interface or port to a provided interface or port."
			to
			"Specifies a link that enables communication between two or more instances. This link may be an instance of an association, or it may represent the possibility of the instances being able to communicate because their identities are known by virtue of being passed in as parameters, held in variables or slots, or because the communicating instances are the same instance. The link may be realized by something as simple as a pointer or by something as complex as a network connection. In contrast to associations, which specify links between any instance of the associated classifiers, connectors specify links between instances playing the connected parts only.\r\nA delegation connector is a connector that links the external contract of a component (as specified by its ports) to the internal realization of that behavior by the component\'s parts. It represents the forwarding of signals (operation requests and events): a signal that arriv  es at a port that has a delegation connector to a part or to another port will be passed on to that target for handling.\r\nAn assembly connector is a connector between two components that defines that one component provides the services that another component requires. An assembly connector is a connector that is defined from a required interface or port to a provided interface or port."
			}
		}
	} ;
	Extension to Extension {
		att isRequired to isRequired bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false."
				to
				"Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false."
				}
			}
		}
		ref metaclass to metaclass bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd."
				to
				"References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes."
			to
			"An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes."
			}
		} ;
		duplicates to duplicates
	} ;
	ExtensionEnd to ExtensionEnd
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An extension end is used to tie an extension to a stereotype when extending a metaclass.\r\nThe default multiplicity of an extension end is 0..1."
			to
			"An extension end is used to tie an extension to a stereotype when extending a metaclass.\r\nThe default multiplicity of an extension end is 0..1."
			}
		} ;
		duplicates to duplicates
	} ;
	Stereotype to Stereotype {
		ref icon to icon bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements."
				to
				"Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass."
			to
			"A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass."
			}
		}
	} ;
	Image to Image {
		att content to content bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing \'instructions\' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)."
				to
				"This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing \'instructions\' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)."
				}
			}
		}
		att location to location bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype."
				to
				"This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype."
				}
			}
		}
		att format to format bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\r\n\r\nIn addition the prefix \'MIME: \' is also reserved. This option can be used as an alternative to express the reserved values above, for example \"SVG\" could instead be expressed as \"MIME: image/svg+xml\"."
				to
				"This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\r\n\r\nIn addition the prefix \'MIME: \' is also reserved. This option can be used as an alternative to express the reserved values above, for example \"SVG\" could instead be expressed as \"MIME: image/svg+xml\"."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "Physical definition of a graphical image." to
			"Physical definition of a graphical image." }
		}
	} ;
	Profile to Profile {
		ref ownedStereotype to ownedStereotype bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Stereotypes that are owned by the Profile." to
				"References the Stereotypes that are owned by the Profile." }
			} ;
			subsets to subsets
		}
		ref metaclassReference to metaclassReference bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References a metaclass that may be extended." to
				"References a metaclass that may be extended." }
			} ;
			subsets to subsets
		}
		ref metamodelReference to metamodelReference bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References a package containing (directly or indirectly) metaclasses that may be extended." to
				"References a package containing (directly or indirectly) metaclasses that may be extended." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain."
			to
			"A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain."
			}
		}
	} ;
	Model to Model {
		att viewpoint to viewpoint bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The name of the viewpoint that is expressed by a model (This name may refer to a profile definition)." to
				"The name of the viewpoint that is expressed by a model (This name may refer to a profile definition)." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail."
			to
			"A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail."
			}
		}
	} ;
	ParameterSet to ParameterSet {
		ref parameter to parameter bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Parameters in the parameter set." to "Parameters in the parameter set." }
			}
		}
		ref condition to condition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Constraint that should be satisfied for the owner of the parameters in an input parameter set to start execution using the values provided for those parameters, or the owner of the parameters in an output parameter set to end execution providing the values for those parameters, if all preconditions and conditions on input parameter sets were satisfied."
				to
				"Constraint that should be satisfied for the owner of the parameters in an input parameter set to start execution using the values provided for those parameters, or the owner of the parameters in an output parameter set to end execution providing the values for those parameters, if all preconditions and conditions on input parameter sets were satisfied."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A parameter set is an element that provides alternative sets of inputs or outputs that a behavior may use." to
			"A parameter set is an element that provides alternative sets of inputs or outputs that a behavior may use." }
		}
	} ;
	DataType to DataType {
		ref ownedAttribute to ownedAttribute bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Attributes owned by the DataType." to
				"The Attributes owned by the DataType." }
			} ;
			subsets to subsets
		}
		ref ownedOperation to ownedOperation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Operations owned by the DataType." to
				"The Operations owned by the DataType." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types."
			to
			"A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types."
			}
		} ;
		duplicates to duplicates
	} ;
	OperationTemplateParameter to OperationTemplateParameter
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An operation template parameter exposes an operation as a formal parameter for a template." to
			"An operation template parameter exposes an operation as a formal parameter for a template." }
		} ;
		duplicates to duplicates
	} ;
	StructuralFeature to StructuralFeature {
		att isReadOnly to isReadOnly bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "States whether the feature\'s value may be modified by a client." to
				"States whether the feature\'s value may be modified by a client." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.\r\nBy specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature."
			to
			"A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.\r\nBy specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature."
			}
		}
	} ;
	CollaborationUse to CollaborationUse {
		ref type to type bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use."
				to
				"The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use."
				}
			}
		}
		ref roleBinding to roleBinding bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).\r\n"
				to
				"A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).\r\n"
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.\r\nAssociated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration."
			to
			"A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.\r\nAssociated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration."
			}
		}
	} ;
	Collaboration to Collaboration {
		ref collaborationRole to collaborationRole bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References connectable elements (possibly owned by other classifiers) which represent roles that instances may play in this collaboration."
				to
				"References connectable elements (possibly owned by other classifiers) which represent roles that instances may play in this collaboration."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A collaboration use represents the application of the pattern described by a collaboration to a specific situation involving specific classes or instances playing the roles of the collaboration."
			to
			"A collaboration use represents the application of the pattern described by a collaboration to a specific situation involving specific classes or instances playing the roles of the collaboration."
			}
		}
	} ;
	UseCase to UseCase {
		ref include to include bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Include relationships owned by this use case." to
				"References the Include relationships owned by this use case." }
			} ;
			subsets to subsets
		}
		ref extend to extend bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Extend relationships owned by this use case." to
				"References the Extend relationships owned by this use case." }
			} ;
			subsets to subsets
		}
		ref extensionPoint to extensionPoint bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the ExtensionPoints owned by the use case." to
				"References the ExtensionPoints owned by the use case." }
			} ;
			subsets to subsets
		}
		ref subject to subject bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the subjects to which this use case applies. The subject or its parts realize all the use cases that apply to this subject. Use cases need not be attached to any specific subject, however. The subject may, but need not, own the use cases that apply to it."
				to
				"References the subjects to which this use case applies. The subject or its parts realize all the use cases that apply to this subject. Use cases need not be attached to any specific subject, however. The subject may, but need not, own the use cases that apply to it."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A use case is the specification of a set of actions performed by a system, which yields an observable result that is, typically, of value for one or more actors or other stakeholders of the system."
			to
			"A use case is the specification of a set of actions performed by a system, which yields an observable result that is, typically, of value for one or more actors or other stakeholders of the system."
			}
		}
	} ;
	Include to Include {
		ref addition to addition bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the use case that is to be included.\r\n" to
				"References the use case that is to be included.\r\n" }
			} ;
			subsets to subsets
		}
		ref includingCase to includingCase bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the use case which will include the addition and owns the include relationship." to
				"References the use case which will include the addition and owns the include relationship." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An include relationship defines that a use case contains the behavior defined in another use case." to
			"An include relationship defines that a use case contains the behavior defined in another use case." }
		}
	} ;
	Extend to Extend {
		ref extendedCase to extendedCase bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the use case that is being extended." to
				"References the use case that is being extended." }
			} ;
			subsets to subsets
		}
		ref condition to condition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.\r\n"
				to
				"References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref extensionLocation to extensionLocation bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)\r\n"
				to
				"An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)\r\n"
				}
			}
		}
		ref extension to extension bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the use case that represents the extension and owns the extend relationship." to
				"References the use case that represents the extension and owns the extend relationship." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A relationship from an extending use case to an extended use case that specifies how and when the behavior defined in the extending use case can be inserted into the behavior defined in the extended use case."
			to
			"A relationship from an extending use case to an extended use case that specifies how and when the behavior defined in the extending use case can be inserted into the behavior defined in the extended use case."
			}
		}
	} ;
	ExtensionPoint to ExtensionPoint {
		ref useCase to useCase bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the use case that owns this extension point." to
				"References the use case that owns this extension point." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An extension point identifies a point in the behavior of a use case where that behavior can be extended by the behavior of some other (extending) use case, as specified by an extend relationship."
			to
			"An extension point identifies a point in the behavior of a use case where that behavior can be extended by the behavior of some other (extending) use case, as specified by an extend relationship."
			}
		}
	} ;
	RedefinableTemplateSignature to RedefinableTemplateSignature {
		ref extendedSignature to extendedSignature bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The template signature that is extended by this template signature." to
				"The template signature that is extended by this template signature." }
			} ;
			subsets to subsets
		}
		ref inheritedParameter to inheritedParameter bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The formal template parameters of the extendedSignature." to
				"The formal template parameters of the extendedSignature." }
			} ;
			subsets to subsets
		}
		ref classifier to classifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The classifier that owns this template signature." to
				"The classifier that owns this template signature." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A redefinable template signature supports the addition of formal template parameters in a specialization of a template classifier."
			to
			"A redefinable template signature supports the addition of formal template parameters in a specialization of a template classifier."
			}
		} ;
		duplicates to duplicates
	} ;
	ClassifierTemplateParameter to ClassifierTemplateParameter {
		att allowSubstitutable to allowSubstitutable bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter."
				to
				"Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter."
				}
			}
		}
		ref defaultClassifier to defaultClassifier bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The classifier that is used by default if no argument is provided during template binding. If this property is empty, then there is no default."
				to
				"The classifier that is used by default if no argument is provided during template binding. If this property is empty, then there is no default."
				}
			}
		}
		ref constrainingClassifier to constrainingClassifier bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The classifier that constrains the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted, otherwise it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument."
				to
				"The classifier that constrains the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted, otherwise it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A classifier template parameter exposes a classifier as a formal template parameter." to
			"A classifier template parameter exposes a classifier as a formal template parameter." }
		} ;
		duplicates to duplicates
	} ;
	StringExpression to StringExpression {
		ref subExpression to subExpression bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The StringExpressions that constitute this StringExpression." to
				"The StringExpressions that constitute this StringExpression." }
			} ;
			subsets to subsets
		}
		ref owningExpression to owningExpression bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The string expression of which this expression is a substring." to
				"The string expression of which this expression is a substring." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters."
			to
			"An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters."
			}
		} ;
		duplicates to duplicates
	} ;
	Expression to Expression {
		att symbol to symbol bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The symbol associated with the node in the expression tree." to
				"The symbol associated with the node in the expression tree." }
			}
		}
		ref operand to operand bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies a sequence of operands." to "Specifies a sequence of operands."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.\r\nAn expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications."
			to
			"An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.\r\nAn expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications."
			}
		}
	} ;
	Usage to Usage
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. A usage is a dependency in which the client requires the presence of the supplier."
			to
			"A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. A usage is a dependency in which the client requires the presence of the supplier."
			}
		}
	} ;
	PackageMerge to PackageMerge {
		ref mergedPackage to mergedPackage bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Package that is to be merged with the receiving package of the PackageMerge." to
				"References the Package that is to be merged with the receiving package of the PackageMerge." }
			} ;
			subsets to subsets
		}
		ref receivingPackage to receivingPackage bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Package that is being extended with the contents of the merged package of the PackageMerge." to
				"References the Package that is being extended with the contents of the merged package of the PackageMerge." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A package merge defines how the contents of one package are extended by the contents of another package." to
			"A package merge defines how the contents of one package are extended by the contents of another package." }
		}
	} ;
	ProfileApplication to ProfileApplication {
		ref appliedProfile to appliedProfile bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the Profiles that are applied to a Package through this ProfileApplication." to
				"References the Profiles that are applied to a Package through this ProfileApplication." }
			} ;
			subsets to subsets
		}
		att isStrict to isStrict bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied."
				to
				"Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied."
				}
			}
		}
		ref applyingPackage to applyingPackage bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The package that owns the profile application." to
				"The package that owns the profile application." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A profile application is used to show which profiles have been applied to a package." to
			"A profile application is used to show which profiles have been applied to a package." }
		}
	} ;
	Enumeration to Enumeration {
		ref ownedLiteral to ownedLiteral bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ordered set of literals for this Enumeration." to
				"The ordered set of literals for this Enumeration." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An enumeration is a data type whose values are enumerated in the model as enumeration literals." to
			"An enumeration is a data type whose values are enumerated in the model as enumeration literals." }
		}
	} ;
	EnumerationLiteral to EnumerationLiteral {
		ref enumeration to enumeration bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Enumeration that this EnumerationLiteral is a member of." to
				"The Enumeration that this EnumerationLiteral is a member of." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An enumeration literal is a user-defined data value for an enumeration."
			to "An enumeration literal is a user-defined data value for an enumeration." }
		}
	} ;
	InstanceSpecification to InstanceSpecification {
		ref classifier to classifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them."
				to
				"The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them."
				}
			}
		}
		ref slot to slot bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description."
				to
				"A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description."
				}
			} ;
			subsets to subsets
		}
		ref specification to specification bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A specification of how to compute, derive, or construct the instance." to
				"A specification of how to compute, derive, or construct the instance." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An instance specification is a model element that represents an instance in a modeled system.\r\nAn instance specification has the capability of being a deployment target in a deployment relationship, in the case that it is an instance of a node. It is also has the capability of being a deployed artifact, if it is an instance of an artifact."
			to
			"An instance specification is a model element that represents an instance in a modeled system.\r\nAn instance specification has the capability of being a deployment target in a deployment relationship, in the case that it is an instance of a node. It is also has the capability of being a deployed artifact, if it is an instance of an artifact."
			}
		}
	} ;
	Slot to Slot {
		ref definingFeature to definingFeature bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The structural feature that specifies the values that may be held by the slot." to
				"The structural feature that specifies the values that may be held by the slot." }
			}
		}
		ref value to value bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The value or values corresponding to the defining feature for the owning instance specification." to
				"The value or values corresponding to the defining feature for the owning instance specification." }
			} ;
			subsets to subsets
		}
		ref owningInstance to owningInstance bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The instance specification that owns this slot." to
				"The instance specification that owns this slot." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature."
			to
			"A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature."
			}
		}
	} ;
	PrimitiveType to PrimitiveType
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically."
			to
			"A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically."
			}
		}
	} ;
	LiteralSpecification to LiteralSpecification
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A literal specification identifies a literal constant being modeled." to
			"A literal specification identifies a literal constant being modeled." }
		}
	} ;
	LiteralInteger to LiteralInteger {
		att value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specified Integer value." to "The specified Integer value." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A literal integer is a specification of an integer value." to
			"A literal integer is a specification of an integer value." }
		} ;
		duplicates to duplicates
	} ;
	LiteralString to LiteralString {
		att value to value bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specified String value." to "The specified String value." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A literal string is a specification of a string value." to
			"A literal string is a specification of a string value." }
		} ;
		duplicates to duplicates
	} ;
	LiteralBoolean to LiteralBoolean {
		att value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specified Boolean value." to "The specified Boolean value." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A literal Boolean is a specification of a Boolean value." to
			"A literal Boolean is a specification of a Boolean value." }
		} ;
		duplicates to duplicates
	} ;
	LiteralNull to LiteralNull
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A literal null specifies the lack of a value." to
			"A literal null specifies the lack of a value." }
		} ;
		duplicates to duplicates
	} ;
	InstanceValue to InstanceValue {
		ref instance to instance bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The instance that is the specified value." to
				"The instance that is the specified value." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An instance value is a value specification that identifies an instance."
			to "An instance value is a value specification that identifies an instance." }
		} ;
		duplicates to duplicates
	} ;
	LiteralUnlimitedNatural to LiteralUnlimitedNatural {
		att value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specified UnlimitedNatural value." to
				"The specified UnlimitedNatural value." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A literal unlimited natural is a specification of an unlimited natural number." to
			"A literal unlimited natural is a specification of an unlimited natural number." }
		} ;
		duplicates to duplicates
	} ;
	OpaqueBehavior to OpaqueBehavior {
		att body to body bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the behavior in one or more languages." to
				"Specifies the behavior in one or more languages." }
			} ;
			"http:///org/eclipse/emf/ecore/util/ExtendedMetaData" to "http:///org/eclipse/emf/ecore/util/ExtendedMetaData"
			detailsEntry {
				kind to kind oldValue element to element }
			}
		}
		att language to language bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Languages the body strings use in the same order as the body strings." to
				"Languages the body strings use in the same order as the body strings." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An behavior with implementation-specific semantics." to
			"An behavior with implementation-specific semantics." }
		}
	} ;
	FunctionBehavior to FunctionBehavior
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A function behavior is an opaque behavior that does not access or modify any objects or other external data." to
			"A function behavior is an opaque behavior that does not access or modify any objects or other external data." }
		}
	} ;
	OpaqueAction to OpaqueAction {
		att body to body bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the action in one or more languages." to
				"Specifies the action in one or more languages." }
			} ;
			"http:///org/eclipse/emf/ecore/util/ExtendedMetaData" to "http:///org/eclipse/emf/ecore/util/ExtendedMetaData"
			detailsEntry {
				kind to kind oldValue element to element }
			}
		}
		att language to language bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Languages the body strings use, in the same order as the body strings" to
				"Languages the body strings use, in the same order as the body strings" }
			}
		}
		ref inputValue to inputValue bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Provides input to the action." to "Provides input to the action." }
			} ;
			subsets to subsets
		}
		ref outputValue to outputValue bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Takes output from the action." to "Takes output from the action." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An action with implementation-specific semantics." to
			"An action with implementation-specific semantics." }
		}
	} ;
	Action to Action {
		ref output to output bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The ordered set of output pins connected to the Action. The action places its results onto pins in this set." to
				"The ordered set of output pins connected to the Action. The action places its results onto pins in this set." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref input to input bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The ordered set of input pins connected to the Action. These are among the total set of inputs." to
				"The ordered set of input pins connected to the Action. These are among the total set of inputs." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref context to context bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The classifier that owns the behavior of which this action is a part." to
				"The classifier that owns the behavior of which this action is a part." }
			}
		}
		ref localPrecondition to localPrecondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Constraint that must be satisfied when execution is started." to
				"Constraint that must be satisfied when execution is started." }
			} ;
			subsets to subsets
		}
		ref localPostcondition to localPostcondition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Constraint that must be satisfied when executed is completed." to
				"Constraint that must be satisfied when executed is completed." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.\r\nAn action represents a single step within an activity, that is, one that is not further decomposed within the activity.\r\nAn action has pre- and post-conditions."
			to
			"An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.\r\nAn action represents a single step within an activity, that is, one that is not further decomposed within the activity.\r\nAn action has pre- and post-conditions."
			}
		}
	} ;
	ExecutableNode to ExecutableNode {
		ref handler to handler bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A set of exception handlers that are examined if an uncaught exception propagates to the outer level of the executable node."
				to
				"A set of exception handlers that are examined if an uncaught exception propagates to the outer level of the executable node."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An executable node is an abstract class for activity nodes that may be executed. It is used as an attachment point for exception handlers."
			to
			"An executable node is an abstract class for activity nodes that may be executed. It is used as an attachment point for exception handlers."
			}
		}
	} ;
	ActivityNode to ActivityNode {
		ref inStructuredNode to inStructuredNode bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Structured activity node containing the node." to
				"Structured activity node containing the node." }
			} ;
			subsets to subsets
		}
		ref activity to activity bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Activity containing the node." to "Activity containing the node." }
			} ;
			subsets to subsets
		}
		ref outgoing to outgoing bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges that have the node as source." to
				"Edges that have the node as source." }
			}
		}
		ref incoming to incoming bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges that have the node as target." to
				"Edges that have the node as target." }
			}
		}
		ref inPartition to inPartition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Partitions containing the node." to "Partitions containing the node." }
			} ;
			subsets to subsets
		}
		ref inInterruptibleRegion to inInterruptibleRegion bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Interruptible regions containing the node." to
				"Interruptible regions containing the node." }
			} ;
			subsets to subsets
		}
		ref inGroup to inGroup bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Groups containing the node." to "Groups containing the node." }
			} ;
			union to union
		}
		ref redefinedNode to redefinedNode bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Inherited nodes replaced by this node in a specialization of the activity." to
				"Inherited nodes replaced by this node in a specialization of the activity." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"ActivityNode is an abstract class for points in the flow of an activity connected by edges." to
			"ActivityNode is an abstract class for points in the flow of an activity connected by edges." }
		}
	} ;
	StructuredActivityNode to StructuredActivityNode {
		ref variable to variable bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A variable defined in the scope of the structured activity node. It has no value and may not be accessed" to
				"A variable defined in the scope of the structured activity node. It has no value and may not be accessed" }
			} ;
			subsets to subsets
		}
		ref edge to edge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges immediately contained in the structured node." to
				"Edges immediately contained in the structured node." }
			} ;
			subsets to subsets
		}
		att mustIsolate to mustIsolate bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, then the actions in the node execute in isolation from actions outside the node." to
				"If true, then the actions in the node execute in isolation from actions outside the node." }
			}
		}
		ref node to node bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Nodes immediately contained in the group." to
				"Nodes immediately contained in the group." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A structured activity node is an executable activity node that may have an expansion into subordinate nodes as an activity group. The subordinate nodes must belong to only one structured activity node, although they may be nested.\r\nBecause of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is \"isolated,\" then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions tha  t would result in accessing such objects are required to have their execution deferred until the completion of the node."
			to
			"A structured activity node is an executable activity node that may have an expansion into subordinate nodes as an activity group. The subordinate nodes must belong to only one structured activity node, although they may be nested.\r\nBecause of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is \"isolated,\" then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions tha  t would result in accessing such objects are required to have their execution deferred until the completion of the node."
			}
		} ;
		duplicates to duplicates
	} ;
	ActivityGroup to ActivityGroup {
		ref subgroup to subgroup bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Groups immediately contained in the group." to
				"Groups immediately contained in the group." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref superGroup to superGroup bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Group immediately containing the group." to
				"Group immediately containing the group." }
			} ;
			subsets to subsets ;
			union to union
		}
		ref inActivity to inActivity bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Activity containing the group." to "Activity containing the group." }
			} ;
			subsets to subsets
		}
		ref containedEdge to containedEdge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges immediately contained in the group." to
				"Edges immediately contained in the group." }
			} ;
			union to union
		}
		ref containedNode to containedNode bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Nodes immediately contained in the group." to
				"Nodes immediately contained in the group." }
			} ;
			union to union
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"ActivityGroup is an abstract class for defining sets of nodes and edges in an activity." to
			"ActivityGroup is an abstract class for defining sets of nodes and edges in an activity." }
		}
	} ;
	Activity to Activity {
		ref structuredNode to structuredNode bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Top-level structured nodes in the activity." to
				"Top-level structured nodes in the activity." }
			} ;
			subsets to subsets
		}
		ref variable to variable bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Top-level variables in the activity." to
				"Top-level variables in the activity." }
			} ;
			subsets to subsets
		}
		ref node to node bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Nodes coordinated by the activity." to
				"Nodes coordinated by the activity." }
			} ;
			subsets to subsets
		}
		att isReadOnly to isReadOnly bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes)."
				to
				"If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes)."
				}
			}
		}
		ref edge to edge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges expressing flow between nodes of the activity." to
				"Edges expressing flow between nodes of the activity." }
			} ;
			subsets to subsets
		}
		ref partition to partition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Top-level partitions in the activity." to
				"Top-level partitions in the activity." }
			} ;
			subsets to subsets
		}
		att isSingleExecution to isSingleExecution bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, all invocations of the activity are handled by the same execution." to
				"If true, all invocations of the activity are handled by the same execution." }
			}
		}
		ref group to group bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Top-level groups in the activity." to "Top-level groups in the activity."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An activity is the specification of parameterized behavior as the coordinated sequencing of subordinate units whose individual elements are actions."
			to
			"An activity is the specification of parameterized behavior as the coordinated sequencing of subordinate units whose individual elements are actions."
			}
		}
	} ;
	Variable to Variable {
		ref scope to scope bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A structured activity node that owns the variable." to
				"A structured activity node that owns the variable." }
			} ;
			subsets to subsets
		}
		ref activityScope to activityScope bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "An activity that owns the variable." to
				"An activity that owns the variable." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Variables are elements for passing data between actions indirectly. A local variable stores values shared by the actions within a structured activity group but not accessible outside it. The output of an action may be written to a variable and read for the input to a subsequent action, which is effectively an indirect data flow path. Because there is no predefined relationship between actions that read and write variables, these actions must be sequenced by control flows to prevent race conditions that may occur between actions that read or write the same variable.\r\nA variable is considered a connectable element."
			to
			"Variables are elements for passing data between actions indirectly. A local variable stores values shared by the actions within a structured activity group but not accessible outside it. The output of an action may be written to a variable and read for the input to a subsequent action, which is effectively an indirect data flow path. Because there is no predefined relationship between actions that read and write variables, these actions must be sequenced by control flows to prevent race conditions that may occur between actions that read or write the same variable.\r\nA variable is considered a connectable element."
			}
		}
	} ;
	ActivityEdge to ActivityEdge {
		ref source to source bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Node from which tokens are taken when they traverse the edge." to
				"Node from which tokens are taken when they traverse the edge." }
			}
		}
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Node to which tokens are put when they traverse the edge." to
				"Node to which tokens are put when they traverse the edge." }
			}
		}
		ref redefinedEdge to redefinedEdge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Inherited edges replaced by this edge in a specialization of the activity." to
				"Inherited edges replaced by this edge in a specialization of the activity." }
			} ;
			subsets to subsets
		}
		ref inPartition to inPartition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Partitions containing the edge." to "Partitions containing the edge." }
			} ;
			subsets to subsets
		}
		ref guard to guard bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specification evaluated at runtime to determine if the edge can be traversed." to
				"Specification evaluated at runtime to determine if the edge can be traversed." }
			} ;
			subsets to subsets
		}
		ref weight to weight bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Number of tokens consumed from the source node on each traversal." to
				"Number of tokens consumed from the source node on each traversal." }
			} ;
			subsets to subsets
		}
		ref interrupts to interrupts bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Region that the edge can interrupt." to
				"Region that the edge can interrupt." }
			}
		}
		ref inStructuredNode to inStructuredNode bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Structured activity node containing the edge." to
				"Structured activity node containing the edge." }
			} ;
			subsets to subsets
		}
		ref inGroup to inGroup bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Groups containing the edge." to "Groups containing the edge." }
			} ;
			union to union
		}
		ref activity to activity bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Activity containing the edge." to "Activity containing the edge." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An activity edge is an abstract class for directed connections between two activity nodes.\r\nActivity edges can be contained in interruptible regions."
			to
			"An activity edge is an abstract class for directed connections between two activity nodes.\r\nActivity edges can be contained in interruptible regions."
			}
		}
	} ;
	ActivityPartition to ActivityPartition {
		att isDimension to isDimension bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Tells whether the partition groups other partitions along a dimension."
				to "Tells whether the partition groups other partitions along a dimension." }
			}
		}
		att isExternal to isExternal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether the partition represents an entity to which the partitioning structure does not apply." to
				"Tells whether the partition represents an entity to which the partitioning structure does not apply." }
			}
		}
		ref node to node bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Nodes immediately contained in the group." to
				"Nodes immediately contained in the group." }
			} ;
			subsets to subsets
		}
		ref subpartition to subpartition bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Partitions immediately contained in the partition." to
				"Partitions immediately contained in the partition." }
			} ;
			subsets to subsets
		}
		ref superPartition to superPartition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Partition immediately containing the partition." to
				"Partition immediately containing the partition." }
			} ;
			subsets to subsets
		}
		ref represents to represents bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "An element constraining behaviors invoked by nodes in the partition." to
				"An element constraining behaviors invoked by nodes in the partition." }
			}
		}
		ref edge to edge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Edges immediately contained in the group." to
				"Edges immediately contained in the group." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An activity partition is a kind of activity group for identifying actions that have some characteristic in common."
			to
			"An activity partition is a kind of activity group for identifying actions that have some characteristic in common."
			}
		}
	} ;
	InterruptibleActivityRegion to InterruptibleActivityRegion {
		ref node to node bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Nodes immediately contained in the group." to
				"Nodes immediately contained in the group." }
			} ;
			subsets to subsets
		}
		ref interruptingEdge to interruptingEdge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The edges leaving the region that will abort other tokens flowing in the region." to
				"The edges leaving the region that will abort other tokens flowing in the region." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interruptible activity region is an activity group that supports termination of tokens flowing in the portions of an activity."
			to
			"An interruptible activity region is an activity group that supports termination of tokens flowing in the portions of an activity."
			}
		}
	} ;
	ExceptionHandler to ExceptionHandler {
		ref handlerBody to handlerBody bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A node that is executed if the handler satisfies an uncaught exception."
				to "A node that is executed if the handler satisfies an uncaught exception." }
			}
		}
		ref exceptionInput to exceptionInput bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An object node within the handler body. When the handler catches an exception, the exception token is placed in this node, causing the body to execute."
				to
				"An object node within the handler body. When the handler catches an exception, the exception token is placed in this node, causing the body to execute."
				}
			}
		}
		ref exceptionType to exceptionType bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body."
				to
				"The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body."
				}
			}
		}
		ref protectedNode to protectedNode bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The node protected by the handler. The handler is examined if an exception propagates to the outside of the node."
				to
				"The node protected by the handler. The handler is examined if an exception propagates to the outside of the node."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An exception handler is an element that specifies a body to execute in case the specified exception occurs during the execution of the protected node."
			to
			"An exception handler is an element that specifies a body to execute in case the specified exception occurs during the execution of the protected node."
			}
		}
	} ;
	ObjectNode to ObjectNode {
		att ordering to ordering bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether and how the tokens in the object node are ordered for selection to traverse edges outgoing from the object node."
				to
				"Tells whether and how the tokens in the object node are ordered for selection to traverse edges outgoing from the object node."
				}
			}
		}
		att isControlType to isControlType bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Tells whether the type of the object node is to be treated as control."
				to "Tells whether the type of the object node is to be treated as control." }
			}
		}
		ref upperBound to upperBound bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached."
				to
				"The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached."
				}
			} ;
			subsets to subsets
		}
		ref inState to inState bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The required states of the object available at this point in the activity." to
				"The required states of the object available at this point in the activity." }
			}
		}
		ref selection to selection bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Selects tokens for outgoing edges." to
				"Selects tokens for outgoing edges." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An object node is an abstract activity node that is part of defining object flow in an activity.\r\nObject nodes have support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values."
			to
			"An object node is an abstract activity node that is part of defining object flow in an activity.\r\nObject nodes have support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values."
			}
		}
	} ;
	OutputPin to OutputPin
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An output pin is a pin that holds output values produced by an action." to
			"An output pin is a pin that holds output values produced by an action." }
		}
	} ;
	Pin to Pin {
		att isControl to isControl bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether the pins provide data to the actions, or just controls when it executes it." to
				"Tells whether the pins provide data to the actions, or just controls when it executes it." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.\r\nA pin is an object node for inputs and outputs to actions."
			to
			"A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.\r\nA pin is an object node for inputs and outputs to actions."
			}
		}
	} ;
	InputPin to InputPin
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An input pin is a pin that holds input values to be consumed by an action." to
			"An input pin is a pin that holds input values to be consumed by an action." }
		}
	} ;
	CallAction to CallAction {
		att isSynchronous to isSynchronous bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, the call is synchronous and the caller waits for completion of the invoked behavior.\r\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.\r\n"
				to
				"If true, the call is synchronous and the caller waits for completion of the invoked behavior.\r\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.\r\n"
				}
			}
		}
		ref result to result bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins where the results of performing the invocation are placed." to
				"A list of output pins where the results of performing the invocation are placed." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"CallAction is an abstract class for actions that invoke behavior and receive return values." to
			"CallAction is an abstract class for actions that invoke behavior and receive return values." }
		}
	} ;
	InvocationAction to InvocationAction {
		ref argument to argument bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specification of the ordered set of argument values that appears during execution." to
				"Specification of the ordered set of argument values that appears during execution." }
			} ;
			subsets to subsets
		}
		ref onPort to onPort bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A optional port of the receiver object on which the behavioral feature is invoked." to
				"A optional port of the receiver object on which the behavioral feature is invoked." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"InvocationAction is an abstract class for the various actions that invoke behavior.\r\nIn addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object."
			to
			"InvocationAction is an abstract class for the various actions that invoke behavior.\r\nIn addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object."
			}
		}
	} ;
	SendSignalAction to SendSignalAction {
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The target object to which the signal is sent." to
				"The target object to which the signal is sent." }
			} ;
			subsets to subsets
		}
		ref signal to signal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The type of signal transmitted to the target object." to
				"The type of signal transmitted to the target object." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A send signal action is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use a send object action."
			to
			"A send signal action is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use a send object action."
			}
		}
	} ;
	CallOperationAction to CallOperationAction {
		ref operation to operation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The operation to be invoked by the action execution." to
				"The operation to be invoked by the action execution." }
			}
		}
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation."
				to
				"The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A call operation action is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete."
			to
			"A call operation action is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete."
			}
		} ;
		duplicates to duplicates
	} ;
	CallBehaviorAction to CallBehaviorAction {
		ref behavior to behavior bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The invoked behavior. It must be capable of accepting and returning control." to
				"The invoked behavior. It must be capable of accepting and returning control." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A call behavior action is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity."
			to
			"A call behavior action is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity."
			}
		} ;
		duplicates to duplicates
	} ;
	SequenceNode to SequenceNode {
		ref executableNode to executableNode bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "An ordered set of executable nodes." to
				"An ordered set of executable nodes." }
			} ;
			redefines to redefines
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A sequence node is a structured activity node that executes its actions in order." to
			"A sequence node is a structured activity node that executes its actions in order." }
		}
	} ;
	ControlNode to ControlNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A control node is an abstract activity node that coordinates flows in an activity." to
			"A control node is an abstract activity node that coordinates flows in an activity." }
		}
	} ;
	ControlFlow to ControlFlow
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A control flow is an edge that starts an activity node after the previous one is finished." to
			"A control flow is an edge that starts an activity node after the previous one is finished." }
		}
	} ;
	InitialNode to InitialNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An initial node is a control node at which flow starts when the activity is invoked." to
			"An initial node is a control node at which flow starts when the activity is invoked." }
		}
	} ;
	ActivityParameterNode to ActivityParameterNode {
		ref parameter to parameter bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The parameter the object node will be accepting or providing values for."
				to "The parameter the object node will be accepting or providing values for." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An activity parameter node is an object node for inputs and outputs to activities." to
			"An activity parameter node is an object node for inputs and outputs to activities." }
		}
	} ;
	ValuePin to ValuePin {
		ref value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Value that the pin will provide." to "Value that the pin will provide." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A value pin is an input pin that provides a value by evaluating a value specification." to
			"A value pin is an input pin that provides a value by evaluating a value specification." }
		}
	} ;
	Message to Message {
		att messageKind to messageKind bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The derived kind of the Message (complete, lost, found or unknown)" to
				"The derived kind of the Message (complete, lost, found or unknown)" }
			}
		}
		att messageSort to messageSort bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The sort of communication reflected by the Message" to
				"The sort of communication reflected by the Message" }
			}
		}
		ref receiveEvent to receiveEvent bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Receiving of the Message" to
				"References the Receiving of the Message" }
			}
		}
		ref sendEvent to sendEvent bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Sending of the Message." to
				"References the Sending of the Message." }
			}
		}
		ref connector to connector bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Connector on which this Message is sent." to
				"The Connector on which this Message is sent." }
			}
		}
		ref interaction to interaction bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The enclosing Interaction owning the Message" to
				"The enclosing Interaction owning the Message" }
			} ;
			subsets to subsets
		}
		ref argument to argument bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The arguments of the Message" to "The arguments of the Message" }
			} ;
			subsets to subsets
		}
		ref signature to signature bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event."
				to
				"The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A message defines a particular communication between lifelines of an interaction." to
			"A message defines a particular communication between lifelines of an interaction." }
		}
	} ;
	MessageEnd to MessageEnd {
		ref message to message bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References a Message." to "References a Message." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a message."
			to
			"MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a message."
			}
		}
	} ;
	Interaction to Interaction {
		ref lifeline to lifeline bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the participants in this Interaction." to
				"Specifies the participants in this Interaction." }
			} ;
			subsets to subsets
		}
		ref fragment to fragment bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The ordered set of fragments in the Interaction." to
				"The ordered set of fragments in the Interaction." }
			} ;
			subsets to subsets
		}
		ref action to action bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Actions owned by the Interaction." to "Actions owned by the Interaction."
				}
			} ;
			subsets to subsets
		}
		ref formalGate to formalGate bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\r\n"
				to
				"Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref message to message bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Messages contained in this Interaction." to
				"The Messages contained in this Interaction." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interaction is a unit of behavior that focuses on the observable exchange of information between connectable elements."
			to
			"An interaction is a unit of behavior that focuses on the observable exchange of information between connectable elements."
			}
		}
	} ;
	InteractionFragment to InteractionFragment {
		ref covered to covered bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Lifelines that the InteractionFragment involves." to
				"References the Lifelines that the InteractionFragment involves." }
			}
		}
		ref generalOrdering to generalOrdering bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The general ordering relationships contained in this fragment." to
				"The general ordering relationships contained in this fragment." }
			} ;
			subsets to subsets
		}
		ref enclosingInteraction to enclosingInteraction bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Interaction enclosing this InteractionFragment." to
				"The Interaction enclosing this InteractionFragment." }
			}
		}
		ref enclosingOperand to enclosingOperand bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The operand enclosing this InteractionFragment (they may nest recursively)" to
				"The operand enclosing this InteractionFragment (they may nest recursively)" }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"InteractionFragment is an abstract notion of the most general interaction unit. An interaction fragment is a piece of an interaction. Each interaction fragment is conceptually like an interaction by itself."
			to
			"InteractionFragment is an abstract notion of the most general interaction unit. An interaction fragment is a piece of an interaction. Each interaction fragment is conceptually like an interaction by itself."
			}
		}
	} ;
	Lifeline to Lifeline {
		ref represents to represents bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the ConnectableElement within the classifier that contains the enclosing interaction." to
				"References the ConnectableElement within the classifier that contains the enclosing interaction." }
			}
		}
		ref interaction to interaction bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Interaction enclosing this Lifeline." to
				"References the Interaction enclosing this Lifeline." }
			} ;
			subsets to subsets
		}
		ref selector to selector bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set."
				to
				"If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set."
				}
			} ;
			subsets to subsets
		}
		ref decomposedAs to decomposedAs bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the Interaction that represents the decomposition." to
				"References the Interaction that represents the decomposition." }
			}
		}
		ref coveredBy to coveredBy bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References the InteractionFragments in which this Lifeline takes part."
				to "References the InteractionFragments in which this Lifeline takes part." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A lifeline represents an individual participant in the interaction. While parts and structural features may have multiplicity greater than 1, lifelines represent only one interacting entity."
			to
			"A lifeline represents an individual participant in the interaction. While parts and structural features may have multiplicity greater than 1, lifelines represent only one interacting entity."
			}
		}
	} ;
	PartDecomposition to PartDecomposition
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A part decomposition is a description of the internal interactions of one lifeline relative to an interaction." to
			"A part decomposition is a description of the internal interactions of one lifeline relative to an interaction." }
		}
	} ;
	InteractionUse to InteractionUse {
		ref refersTo to refersTo bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Refers to the Interaction that defines its meaning" to
				"Refers to the Interaction that defines its meaning" }
			}
		}
		ref actualGate to actualGate bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The actual gates of the InteractionUse" to
				"The actual gates of the InteractionUse" }
			} ;
			subsets to subsets
		}
		ref argument to argument bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The actual arguments of the Interaction" to
				"The actual arguments of the Interaction" }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interaction use refers to an interaction. The interaction use is a shorthand for copying the contents of the referenced interaction where the interaction use is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones."
			to
			"An interaction use refers to an interaction. The interaction use is a shorthand for copying the contents of the referenced interaction where the interaction use is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones."
			}
		}
	} ;
	Gate to Gate
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A gate is a connection point for relating a message outside an interaction fragment with a message inside the interaction fragment."
			to
			"A gate is a connection point for relating a message outside an interaction fragment with a message inside the interaction fragment."
			}
		}
	} ;
	GeneralOrdering to GeneralOrdering {
		ref before to before bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after." to
				"The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after." }
			}
		}
		ref after to after bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before." to
				"The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A general ordering represents a binary relation between two occurrence specifications, to describe that one occurrence specification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of occurrence cpecifications that may otherwise not have a specified order."
			to
			"A general ordering represents a binary relation between two occurrence specifications, to describe that one occurrence specification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of occurrence cpecifications that may otherwise not have a specified order."
			}
		}
	} ;
	OccurrenceSpecification to OccurrenceSpecification {
		ref toBefore to toBefore bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\r\n"
				to
				"References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\r\n"
				}
			}
		}
		ref event to event bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "References a specification of the occurring event." to
				"References a specification of the occurring event." }
			}
		}
		ref toAfter to toAfter bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\r\n"
				to
				"References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\r\n"
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An occurrence specification is the basic semantic unit of interactions. The sequences of occurrences specified by them are the meanings of interactions."
			to
			"An occurrence specification is the basic semantic unit of interactions. The sequences of occurrences specified by them are the meanings of interactions."
			}
		} ;
		duplicates to duplicates
	} ;
	InteractionOperand to InteractionOperand {
		ref guard to guard bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Constraint of the operand." to "Constraint of the operand." }
			} ;
			subsets to subsets
		}
		ref fragment to fragment bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The fragments of the operand." to "The fragments of the operand." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interaction operand is contained in a combined fragment. An interaction operand represents one operand of the expression given by the enclosing combined fragment."
			to
			"An interaction operand is contained in a combined fragment. An interaction operand represents one operand of the expression given by the enclosing combined fragment."
			}
		}
	} ;
	InteractionConstraint to InteractionConstraint {
		ref minint to minint bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The minimum number of iterations of a loop" to
				"The minimum number of iterations of a loop" }
			} ;
			subsets to subsets
		}
		ref maxint to maxint bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The maximum number of iterations of a loop" to
				"The maximum number of iterations of a loop" }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An interaction constraint is a Boolean expression that guards an operand in a combined fragment." to
			"An interaction constraint is a Boolean expression that guards an operand in a combined fragment." }
		}
	} ;
	ExecutionSpecification to ExecutionSpecification {
		ref start to start bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the OccurrenceSpecification that designates the start of the Action or Behavior" to
				"References the OccurrenceSpecification that designates the start of the Action or Behavior" }
			}
		}
		ref finish to finish bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the OccurrenceSpecification that designates the finish of the Action or Behavior." to
				"References the OccurrenceSpecification that designates the finish of the Action or Behavior." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An execution specification is a specification of the execution of a unit of behavior or action within the lifeline. The duration of an execution specification is represented by two cccurrence specifications, the start occurrence specification and the finish occurrence specification."
			to
			"An execution specification is a specification of the execution of a unit of behavior or action within the lifeline. The duration of an execution specification is represented by two cccurrence specifications, the start occurrence specification and the finish occurrence specification."
			}
		}
	} ;
	StateInvariant to StateInvariant {
		ref invariant to invariant bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A Constraint that should hold at runtime for this StateInvariant" to
				"A Constraint that should hold at runtime for this StateInvariant" }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A state invariant is a runtime constraint on the participants of the interaction. It may be used to specify a variety of different kinds of constraints, such as values of attributes or variables, internal or external states, and so on. A state invariant is an interaction fragment and it is placed on a lifeline."
			to
			"A state invariant is a runtime constraint on the participants of the interaction. It may be used to specify a variety of different kinds of constraints, such as values of attributes or variables, internal or external states, and so on. A state invariant is an interaction fragment and it is placed on a lifeline."
			}
		} ;
		duplicates to duplicates
	} ;
	ActionExecutionSpecification to ActionExecutionSpecification {
		ref action to action bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Action whose execution is occurring." to
				"Action whose execution is occurring." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An action execution specification is a kind of execution specification representing the execution of an action."
			to
			"An action execution specification is a kind of execution specification representing the execution of an action." }
		}
	} ;
	BehaviorExecutionSpecification to BehaviorExecutionSpecification {
		ref behavior to behavior bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Behavior whose execution is occurring." to
				"Behavior whose execution is occurring." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A behavior execution specification is a kind of execution specification representing the execution of a behavior."
			to
			"A behavior execution specification is a kind of execution specification representing the execution of a behavior."
			}
		}
	} ;
	ExecutionEvent to ExecutionEvent
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An execution event models the start or finish of an execution occurrence."
			to "An execution event models the start or finish of an execution occurrence." }
		}
	} ;
	CreationEvent to CreationEvent
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A creation event models the creation of an object." to
			"A creation event models the creation of an object." }
		}
	} ;
	DestructionEvent to DestructionEvent
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A destruction event models the destruction of an object." to
			"A destruction event models the destruction of an object." }
		}
	} ;
	SendOperationEvent to SendOperationEvent {
		ref operation to operation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The operation associated with this event." to
				"The operation associated with this event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A send operation event models the invocation of an operation call." to
			"A send operation event models the invocation of an operation call." }
		}
	} ;
	MessageEvent to MessageEvent
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A message event specifies the receipt by an object of either a call or a signal." to
			"A message event specifies the receipt by an object of either a call or a signal." }
		}
	} ;
	SendSignalEvent to SendSignalEvent {
		ref signal to signal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The signal associated with this event." to
				"The signal associated with this event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A send signal event models the sending of a signal." to
			"A send signal event models the sending of a signal." }
		}
	} ;
	MessageOccurrenceSpecification to MessageOccurrenceSpecification
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A message occurrence specification pecifies the occurrence of message events, such as sending and receiving of signals or invoking or receiving of operation calls. A message occurrence specification is a kind of message end. Messages are generated either by synchronous operation calls or asynchronous signal sends. They are received by the execution of corresponding accept event actions."
			to
			"A message occurrence specification pecifies the occurrence of message events, such as sending and receiving of signals or invoking or receiving of operation calls. A message occurrence specification is a kind of message end. Messages are generated either by synchronous operation calls or asynchronous signal sends. They are received by the execution of corresponding accept event actions."
			}
		}
	} ;
	ExecutionOccurrenceSpecification to ExecutionOccurrenceSpecification {
		ref execution to execution bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"References the execution specification describing the execution that is started or finished at this execution event."
				to
				"References the execution specification describing the execution that is started or finished at this execution event."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An execution occurrence specification represents moments in time at which actions or behaviors start or finish."
			to
			"An execution occurrence specification represents moments in time at which actions or behaviors start or finish." }
		} ;
		duplicates to duplicates
	} ;
	ReceiveOperationEvent to ReceiveOperationEvent {
		ref operation to operation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The operation associated with this event." to
				"The operation associated with this event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A receive operation event specifies the event of receiving an operation invocation for a particular operation by the target entity."
			to
			"A receive operation event specifies the event of receiving an operation invocation for a particular operation by the target entity."
			}
		}
	} ;
	ReceiveSignalEvent to ReceiveSignalEvent {
		ref signal to signal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The signal associated with this event." to
				"The signal associated with this event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A receive signal event specifies the event of receiving a signal by the target entity." to
			"A receive signal event specifies the event of receiving a signal by the target entity." }
		}
	} ;
	Actor to Actor
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An actor specifies a role played by a user or any other system that interacts with the subject." to
			"An actor specifies a role played by a user or any other system that interacts with the subject." }
		}
	} ;
	CallEvent to CallEvent {
		ref operation to operation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Designates the operation whose invocation raised the call event." to
				"Designates the operation whose invocation raised the call event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A call event models the receipt by an object of a message invoking a call of an operation." to
			"A call event models the receipt by an object of a message invoking a call of an operation." }
		}
	} ;
	ChangeEvent to ChangeEvent {
		ref changeExpression to changeExpression bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A Boolean-valued expression that will result in a change event whenever its value changes from false to true." to
				"A Boolean-valued expression that will result in a change event whenever its value changes from false to true." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A change event models a change in the system configuration that makes a condition true." to
			"A change event models a change in the system configuration that makes a condition true." }
		}
	} ;
	SignalEvent to SignalEvent {
		ref signal to signal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specific signal that is associated with this event." to
				"The specific signal that is associated with this event." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A signal event represents the receipt of an asynchronous signal instance. A signal event may, for example, cause a state machine to trigger a transition."
			to
			"A signal event represents the receipt of an asynchronous signal instance. A signal event may, for example, cause a state machine to trigger a transition."
			}
		}
	} ;
	AnyReceiveEvent to AnyReceiveEvent
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A transition trigger associated with an any receive event specifies that the transition is to be triggered by the receipt of any message that is not explicitly referenced in another transition from the same vertex."
			to
			"A transition trigger associated with an any receive event specifies that the transition is to be triggered by the receipt of any message that is not explicitly referenced in another transition from the same vertex."
			}
		}
	} ;
	ForkNode to ForkNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A fork node is a control node that splits a flow into multiple concurrent flows." to
			"A fork node is a control node that splits a flow into multiple concurrent flows." }
		}
	} ;
	FlowFinalNode to FlowFinalNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A flow final node is a final node that terminates a flow." to
			"A flow final node is a final node that terminates a flow." }
		}
	} ;
	FinalNode to FinalNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A final node is an abstract control node at which a flow in an activity stops." to
			"A final node is an abstract control node at which a flow in an activity stops." }
		}
	} ;
	CentralBufferNode to CentralBufferNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A central buffer node is an object node for managing flows from multiple sources and destinations." to
			"A central buffer node is an object node for managing flows from multiple sources and destinations." }
		}
	} ;
	MergeNode to MergeNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows."
			to
			"A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows."
			}
		}
	} ;
	DecisionNode to DecisionNode {
		ref decisionInput to decisionInput bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Provides input to guard specifications on edges outgoing from the decision node." to
				"Provides input to guard specifications on edges outgoing from the decision node." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A decision node is a control node that chooses between outgoing flows." to
			"A decision node is a control node that chooses between outgoing flows." }
		}
	} ;
	ActivityFinalNode to ActivityFinalNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An activity final node is a final node that stops all flows in an activity." to
			"An activity final node is a final node that stops all flows in an activity." }
		}
	} ;
	ComponentRealization to ComponentRealization {
		ref abstraction to abstraction bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The Component that owns this ComponentRealization and which is implemented by its realizing classifiers." to
				"The Component that owns this ComponentRealization and which is implemented by its realizing classifiers." }
			} ;
			subsets to subsets
		}
		ref realizingClassifier to realizingClassifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A classifier that is involved in the implementation of the Component that owns this ComponentRealization." to
				"A classifier that is involved in the implementation of the Component that owns this ComponentRealization." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"The realization concept is specialized to (optionally) define the classifiers that realize the contract offered by a component in terms of its provided and required interfaces. The component forms an abstraction from these various classifiers."
			to
			"The realization concept is specialized to (optionally) define the classifiers that realize the contract offered by a component in terms of its provided and required interfaces. The component forms an abstraction from these various classifiers."
			}
		}
	} ;
	Component to Component {
		att isIndirectlyInstantiated to isIndirectlyInstantiated bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. <<specification>>, <<focus>>, <<subsystem>>."
				to
				"The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. <<specification>>, <<focus>>, <<subsystem>>."
				}
			}
		}
		ref required to required bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be Used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports."
				to
				"The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be Used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports."
				}
			}
		}
		ref provided to provided bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports."
				to
				"The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports."
				}
			}
		}
		ref packagedElement to packagedElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts."
				to
				"The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts."
				}
			} ;
			subsets to subsets
		}
		ref realization to realization bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior."
				to
				"The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\r\nIn the namespace of a component, all model elements that are involved in or related to its definition are either owned or imported explicitly. This may include, for example, use cases and dependencies (e.g. mappings), packages, components, and artifacts."
			to
			"A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\r\nIn the namespace of a component, all model elements that are involved in or related to its definition are either owned or imported explicitly. This may include, for example, use cases and dependencies (e.g. mappings), packages, components, and artifacts."
			}
		}
	} ;
	Node to Node {
		ref nestedNode to nestedNode bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The Nodes that are defined (nested) within the Node." to
				"The Nodes that are defined (nested) within the Node." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A node is computational resource upon which artifacts may be deployed for execution.\r\nNodes can be interconnected through communication paths to define network structures."
			to
			"A node is computational resource upon which artifacts may be deployed for execution.\r\nNodes can be interconnected through communication paths to define network structures."
			}
		}
	} ;
	Device to Device
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices)."
			to
			"A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices)."
			}
		}
	} ;
	ExecutionEnvironment to ExecutionEnvironment
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts."
			to
			"An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts."
			}
		}
	} ;
	CommunicationPath to CommunicationPath
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A communication path is an association between two deployment targets, through which they are able to exchange signals and messages."
			to
			"A communication path is an association between two deployment targets, through which they are able to exchange signals and messages."
			}
		} ;
		duplicates to duplicates
	} ;
	CombinedFragment to CombinedFragment {
		att interactionOperator to interactionOperator bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the operation which defines the semantics of this combination of InteractionFragments." to
				"Specifies the operation which defines the semantics of this combination of InteractionFragments." }
			}
		}
		ref operand to operand bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The set of operands of the combined fragment." to
				"The set of operands of the combined fragment." }
			} ;
			subsets to subsets
		}
		ref cfragmentGate to cfragmentGate bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the gates that form the interface between this CombinedFragment and its surroundings" to
				"Specifies the gates that form the interface between this CombinedFragment and its surroundings" }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A combined fragment defines an expression of interaction fragments. A combined fragment is defined by an interaction operator and corresponding interaction operands. Through the use of combined fragments the user will be able to describe a number of traces in a compact and concise manner."
			to
			"A combined fragment defines an expression of interaction fragments. A combined fragment is defined by an interaction operator and corresponding interaction operands. Through the use of combined fragments the user will be able to describe a number of traces in a compact and concise manner."
			}
		}
	} ;
	Continuation to Continuation {
		att setting to setting bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning."
				to
				"True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A continuation is a syntactic way to define continuations of different branches of an alternative combined fragment. Continuations is intuitively similar to labels representing intermediate points in a flow of control."
			to
			"A continuation is a syntactic way to define continuations of different branches of an alternative combined fragment. Continuations is intuitively similar to labels representing intermediate points in a flow of control."
			}
		}
	} ;
	ConsiderIgnoreFragment to ConsiderIgnoreFragment {
		ref message to message bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The set of messages that apply to this fragment" to
				"The set of messages that apply to this fragment" }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A consider ignore fragment is a kind of combined fragment that is used for the consider and ignore cases, which require lists of pertinent messages to be specified."
			to
			"A consider ignore fragment is a kind of combined fragment that is used for the consider and ignore cases, which require lists of pertinent messages to be specified."
			}
		}
	} ;
	CreateObjectAction to CreateObjectAction {
		ref classifier to classifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Classifier to be instantiated." to "Classifier to be instantiated." }
			}
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A create object action is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime."
			to
			"A create object action is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime."
			}
		}
	} ;
	DestroyObjectAction to DestroyObjectAction {
		att isDestroyLinks to isDestroyLinks bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether links in which the object participates are destroyed along with the object." to
				"Specifies whether links in which the object participates are destroyed along with the object." }
			}
		}
		att isDestroyOwnedObjects to isDestroyOwnedObjects bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether objects owned by the object are destroyed along with the object." to
				"Specifies whether objects owned by the object are destroyed along with the object." }
			}
		}
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The input pin providing the object to be destroyed." to
				"The input pin providing the object to be destroyed." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A destroy object action is an action that destroys objects." to
			"A destroy object action is an action that destroys objects." }
		}
	} ;
	TestIdentityAction to TestIdentityAction {
		ref first to first bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the pin on which an object is placed." to
				"Gives the pin on which an object is placed." }
			} ;
			subsets to subsets
		}
		ref second to second bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the pin on which an object is placed." to
				"Gives the pin on which an object is placed." }
			} ;
			subsets to subsets
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Tells whether the two input objects are identical." to
				"Tells whether the two input objects are identical." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A test identity action is an action that tests if two values are identical objects." to
			"A test identity action is an action that tests if two values are identical objects." }
		}
	} ;
	ReadSelfAction to ReadSelfAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the hosting object is placed." to
				"Gives the output pin on which the hosting object is placed." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read self action is an action that retrieves the host object of an action." to
			"A read self action is an action that retrieves the host object of an action." }
		}
	} ;
	StructuralFeatureAction to StructuralFeatureAction {
		ref structuralFeature to structuralFeature bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Structural feature to be read." to "Structural feature to be read." }
			}
		}
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Gives the input pin from which the object whose structural feature is to be read or written is obtained.\r\n" to
				"Gives the input pin from which the object whose structural feature is to be read or written is obtained.\r\n" }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"StructuralFeatureAction is an abstract class for all structural feature actions." to
			"StructuralFeatureAction is an abstract class for all structural feature actions." }
		}
	} ;
	ReadStructuralFeatureAction to ReadStructuralFeatureAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read structural feature action is a structural feature action that retrieves the values of a structural feature."
			to
			"A read structural feature action is a structural feature action that retrieves the values of a structural feature."
			}
		} ;
		duplicates to duplicates
	} ;
	WriteStructuralFeatureAction to WriteStructuralFeatureAction {
		ref value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Value to be added or removed from the structural feature." to
				"Value to be added or removed from the structural feature." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"WriteStructuralFeatureAction is an abstract class for structural feature actions that change structural feature values."
			to
			"WriteStructuralFeatureAction is an abstract class for structural feature actions that change structural feature values."
			}
		} ;
		duplicates to duplicates
	} ;
	ClearStructuralFeatureAction to ClearStructuralFeatureAction
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A clear structural feature action is a structural feature action that removes all values of a structural feature."
			to
			"A clear structural feature action is a structural feature action that removes all values of a structural feature."
			}
		}
	} ;
	RemoveStructuralFeatureValueAction to RemoveStructuralFeatureValueAction {
		att isRemoveDuplicates to isRemoveDuplicates bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether to remove duplicates of the value in nonunique structural features." to
				"Specifies whether to remove duplicates of the value in nonunique structural features." }
			}
		}
		ref removeAt to removeAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				to
				"Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A remove structural feature value action is a write structural feature action that removes values from structural features."
			to
			"A remove structural feature value action is a write structural feature action that removes values from structural features."
			}
		}
	} ;
	AddStructuralFeatureValueAction to AddStructuralFeatureValueAction {
		att isReplaceAll to isReplaceAll bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether existing values of the structural feature of the object should be removed before adding the new value."
				to
				"Specifies whether existing values of the structural feature of the object should be removed before adding the new value."
				}
			}
		}
		ref insertAt to insertAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features."
				to
				"Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An add structural feature value action is a write structural feature action for adding values to a structural feature."
			to
			"An add structural feature value action is a write structural feature action for adding values to a structural feature."
			}
		}
	} ;
	LinkAction to LinkAction {
		ref endData to endData bounds (2,-1) to (2,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Data identifying one end of a link by the objects on its ends and qualifiers." to
				"Data identifying one end of a link by the objects on its ends and qualifiers." }
			}
		}
		ref inputValue to inputValue bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Pins taking end objects and qualifier values as input." to
				"Pins taking end objects and qualifier values as input." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"LinkAction is an abstract class for all link actions that identify their links by the objects at the ends of the links and by the qualifiers at ends of the links."
			to
			"LinkAction is an abstract class for all link actions that identify their links by the objects at the ends of the links and by the qualifiers at ends of the links."
			}
		}
	} ;
	LinkEndData to LinkEndData {
		ref value to value bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an \'open\' end for reading."
				to
				"Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an \'open\' end for reading."
				}
			}
		}
		ref end to end bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Association end for which this link-end data specifies values." to
				"Association end for which this link-end data specifies values." }
			}
		}
		ref qualifier to qualifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "List of qualifier values" to "List of qualifier values" }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A link end data is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of a link action. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around a link end data. Each association end is identified separately with an instance of the LinkEndData class."
			to
			"A link end data is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of a link action. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around a link end data. Each association end is identified separately with an instance of the LinkEndData class."
			}
		}
	} ;
	QualifierValue to QualifierValue {
		ref qualifier to qualifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Attribute representing the qualifier for which the value is to be specified." to
				"Attribute representing the qualifier for which the value is to be specified." }
			}
		}
		ref value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Input pin from which the specified value for the qualifier is taken." to
				"Input pin from which the specified value for the qualifier is taken." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A qualifier value is not an action. It is an element that identifies links. It gives a single qualifier within a link end data specification."
			to
			"A qualifier value is not an action. It is an element that identifies links. It gives a single qualifier within a link end data specification."
			}
		}
	} ;
	ReadLinkAction to ReadLinkAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The pin on which are put the objects participating in the association at the end not specified by the inputs.\r\n"
				to
				"The pin on which are put the objects participating in the association at the end not specified by the inputs.\r\n"
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read link action is a link action that navigates across associations to retrieve objects on one end." to
			"A read link action is a link action that navigates across associations to retrieve objects on one end." }
		}
	} ;
	LinkEndCreationData to LinkEndCreationData {
		att isReplaceAll to isReplaceAll bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link."
				to
				"Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link."
				}
			}
		}
		ref insertAt to insertAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered."
				to
				"Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A link end creation data is not an action. It is an element that identifies links. It identifies one end of a link to be created by a create link action."
			to
			"A link end creation data is not an action. It is an element that identifies links. It identifies one end of a link to be created by a create link action."
			}
		}
	} ;
	CreateLinkAction to CreateLinkAction
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A create link action is a write link action for creating links." to
			"A create link action is a write link action for creating links." }
		} ;
		duplicates to duplicates
	} ;
	WriteLinkAction to WriteLinkAction
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"WriteLinkAction is an abstract class for link actions that create and destroy links." to
			"WriteLinkAction is an abstract class for link actions that create and destroy links." }
		}
	} ;
	DestroyLinkAction to DestroyLinkAction
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A destroy link action is a write link action that destroys links and link objects." to
			"A destroy link action is a write link action that destroys links and link objects." }
		} ;
		duplicates to duplicates
	} ;
	LinkEndDestructionData to LinkEndDestructionData {
		att isDestroyDuplicates to isDestroyDuplicates bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether to destroy duplicates of the value in nonunique association ends." to
				"Specifies whether to destroy duplicates of the value in nonunique association ends." }
			}
		}
		ref destroyAt to destroyAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				to
				"Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A link end destruction data is not an action. It is an element that identifies links. It identifies one end of a link to be destroyed by destroy link action."
			to
			"A link end destruction data is not an action. It is an element that identifies links. It identifies one end of a link to be destroyed by destroy link action."
			}
		}
	} ;
	ClearAssociationAction to ClearAssociationAction {
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Gives the input pin from which is obtained the object whose participation in the association is to be cleared."
				to
				"Gives the input pin from which is obtained the object whose participation in the association is to be cleared." }
			} ;
			subsets to subsets
		}
		ref association to association bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Association to be cleared." to "Association to be cleared." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A clear association action is an action that destroys all links of an association in which a particular object participates."
			to
			"A clear association action is an action that destroys all links of an association in which a particular object participates."
			}
		}
	} ;
	BroadcastSignalAction to BroadcastSignalAction {
		ref signal to signal bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The specification of signal object transmitted to the target objects." to
				"The specification of signal object transmitted to the target objects." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A broadcast signal action is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor."
			to
			"A broadcast signal action is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor."
			}
		}
	} ;
	SendObjectAction to SendObjectAction {
		ref target to target bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The target object to which the object is sent." to
				"The target object to which the object is sent." }
			} ;
			subsets to subsets
		}
		ref request to request bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved."
				to
				"The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved."
				}
			} ;
			redefines to redefines
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A send object action is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor."
			to
			"A send object action is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor."
			}
		}
	} ;
	ValueSpecificationAction to ValueSpecificationAction {
		ref value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Value specification to be evaluated." to
				"Value specification to be evaluated." }
			}
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A value specification action is an action that evaluates a value specification." to
			"A value specification action is an action that evaluates a value specification." }
		}
	} ;
	TimeExpression to TimeExpression {
		ref expr to expr bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The value of the time expression." to "The value of the time expression."
				}
			}
		}
		ref observation to observation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Refers to the time and duration observations that are involved in expr."
				to "Refers to the time and duration observations that are involved in expr." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A time expression defines a value specification that represents a time value." to
			"A time expression defines a value specification that represents a time value." }
		} ;
		duplicates to duplicates
	} ;
	Observation to Observation
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Observation is a superclass of TimeObservation and DurationObservation in order for TimeExpression and Duration to refer to either in a simple way."
			to
			"Observation is a superclass of TimeObservation and DurationObservation in order for TimeExpression and Duration to refer to either in a simple way."
			}
		}
	} ;
	Duration to Duration {
		ref expr to expr bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The value of the Duration." to "The value of the Duration." }
			}
		}
		ref observation to observation bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Refers to the time and duration observations that are involved in expr."
				to "Refers to the time and duration observations that are involved in expr." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Duration defines a value specification that specifies the temporal distance between two time instants." to
			"Duration defines a value specification that specifies the temporal distance between two time instants." }
		} ;
		duplicates to duplicates
	} ;
	DurationInterval to DurationInterval
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A duration interval defines the range between two durations." to
			"A duration interval defines the range between two durations." }
		} ;
		duplicates to duplicates
	} ;
	Interval to Interval {
		ref min to min bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Refers to the ValueSpecification denoting the minimum value of the range." to
				"Refers to the ValueSpecification denoting the minimum value of the range." }
			}
		}
		ref max to max bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Refers to the ValueSpecification denoting the maximum value of the range." to
				"Refers to the ValueSpecification denoting the maximum value of the range." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An interval defines the range between two value specifications." to
			"An interval defines the range between two value specifications." }
		}
	} ;
	TimeConstraint to TimeConstraint {
		att firstEvent to firstEvent bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The value of firstEvent is related to constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within constrainedElement."
				to
				"The value of firstEvent is related to constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within constrainedElement."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A time constraint is a constraint that refers to a time interval." to
			"A time constraint is a constraint that refers to a time interval." }
		} ;
		duplicates to duplicates
	} ;
	IntervalConstraint to IntervalConstraint
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An interval constraint is a constraint that refers to an interval." to
			"An interval constraint is a constraint that refers to an interval." }
		} ;
		duplicates to duplicates
	} ;
	TimeInterval to TimeInterval
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A time interval defines the range between two time expressions." to
			"A time interval defines the range between two time expressions." }
		} ;
		duplicates to duplicates
	} ;
	DurationConstraint to DurationConstraint {
		att firstEvent to firstEvent bounds (0,2) to (0,2)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]. Default value is true applied when constrainedElement[i] refers an element that represents only one time instant."
				to
				"The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]. Default value is true applied when constrainedElement[i] refers an element that represents only one time instant."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A duration constraint is a constraint that refers to a duration interval."
			to "A duration constraint is a constraint that refers to a duration interval." }
		} ;
		duplicates to duplicates
	} ;
	TimeObservation to TimeObservation {
		ref event to event bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The observation is determined by the entering or exiting of the event element during execution." to
				"The observation is determined by the entering or exiting of the event element during execution." }
			}
		}
		att firstEvent to firstEvent bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The value of firstEvent is related to event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters event. If firstEvent is false, then the corresponding observation event is the time instant the execution exits event."
				to
				"The value of firstEvent is related to event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters event. If firstEvent is false, then the corresponding observation event is the time instant the execution exits event."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A time observation is a reference to a time instant during an execution. It points out the element in the model to observe and whether the observation is when this model element is entered or when it is exited."
			to
			"A time observation is a reference to a time instant during an execution. It points out the element in the model to observe and whether the observation is when this model element is entered or when it is exited."
			}
		}
	} ;
	DurationObservation to DurationObservation {
		ref event to event bounds (1,2) to (1,2)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The observation is determined by the entering or exiting of the event element during execution." to
				"The observation is determined by the entering or exiting of the event element during execution." }
			}
		}
		att firstEvent to firstEvent bounds (0,2) to (0,2)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]. Default value is true applied when event[i] refers an element that represents only one time instant."
				to
				"The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]. Default value is true applied when event[i] refers an element that represents only one time instant."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A duration observation is a reference to a duration during an execution. It points out the element(s) in the model to observe and whether the observations are when this model element is entered or when it is exited."
			to
			"A duration observation is a reference to a duration during an execution. It points out the element(s) in the model to observe and whether the observations are when this model element is entered or when it is exited."
			}
		}
	} ;
	FinalState to FinalState
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed."
			to
			"A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed."
			}
		}
	} ;
	TimeEvent to TimeEvent {
		att isRelative to isRelative bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies whether it is relative or absolute time." to
				"Specifies whether it is relative or absolute time." }
			}
		}
		ref when to when bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Specifies the corresponding time deadline." to
				"Specifies the corresponding time deadline." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A time event specifies a point in time. At the specified time, the event occurs.\r\nA time event can be defined relative to entering the current state of the executing state machine."
			to
			"A time event specifies a point in time. At the specified time, the event occurs.\r\nA time event can be defined relative to entering the current state of the executing state machine."
			}
		}
	} ;
	VariableAction to VariableAction {
		ref variable to variable bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Variable to be read." to "Variable to be read." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"VariableAction is an abstract class for actions that operate on a statically specified variable." to
			"VariableAction is an abstract class for actions that operate on a statically specified variable." }
		}
	} ;
	ReadVariableAction to ReadVariableAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read variable action is a variable action that retrieves the values of a variable." to
			"A read variable action is a variable action that retrieves the values of a variable." }
		}
	} ;
	WriteVariableAction to WriteVariableAction {
		ref value to value bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Value to be added or removed from the variable." to
				"Value to be added or removed from the variable." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"WriteVariableAction is an abstract class for variable actions that change variable values." to
			"WriteVariableAction is an abstract class for variable actions that change variable values." }
		}
	} ;
	ClearVariableAction to ClearVariableAction
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A clear variable action is a variable action that removes all values of a variable." to
			"A clear variable action is a variable action that removes all values of a variable." }
		}
	} ;
	AddVariableValueAction to AddVariableValueAction {
		att isReplaceAll to isReplaceAll bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether existing values of the variable should be removed before adding the new value." to
				"Specifies whether existing values of the variable should be removed before adding the new value." }
			}
		}
		ref insertAt to insertAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables."
				to
				"Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An add variable value action is a write variable action for adding values to a variable." to
			"An add variable value action is a write variable action for adding values to a variable." }
		}
	} ;
	RemoveVariableValueAction to RemoveVariableValueAction {
		att isRemoveDuplicates to isRemoveDuplicates bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether to remove duplicates of the value in nonunique variables." to
				"Specifies whether to remove duplicates of the value in nonunique variables." }
			}
		}
		ref removeAt to removeAt bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				to
				"Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A remove variable value action is a write variable action that removes values from variables." to
			"A remove variable value action is a write variable action that removes values from variables." }
		}
	} ;
	RaiseExceptionAction to RaiseExceptionAction {
		ref exception to exception bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "An input pin whose value becomes an exception object." to
				"An input pin whose value becomes an exception object." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A raise exception action is an action that causes an exception to occur. The input value becomes the exception object."
			to
			"A raise exception action is an action that causes an exception to occur. The input value becomes the exception object."
			}
		}
	} ;
	ActionInputPin to ActionInputPin {
		ref fromAction to fromAction bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The action used to provide values." to
				"The action used to provide values." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An action input pin is a kind of pin that executes an action to determine the values to input to another." to
			"An action input pin is a kind of pin that executes an action to determine the values to input to another." }
		}
	} ;
	InformationItem to InformationItem {
		ref represented to represented bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers."
				to
				"Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated."
			to
			"An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated."
			}
		}
	} ;
	InformationFlow to InformationFlow {
		ref realization to realization bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Determines which Relationship will realize the specified flow" to
				"Determines which Relationship will realize the specified flow" }
			}
		}
		ref conveyed to conveyed bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the information items that may circulate on this information flow." to
				"Specifies the information items that may circulate on this information flow." }
			}
		}
		ref informationSource to informationSource bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Defines from which source the conveyed InformationItems are initiated."
				to "Defines from which source the conveyed InformationItems are initiated." }
			} ;
			subsets to subsets
		}
		ref informationTarget to informationTarget bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Defines to which target the conveyed InformationItems are directed." to
				"Defines to which target the conveyed InformationItems are directed." }
			} ;
			subsets to subsets
		}
		ref realizingActivityEdge to realizingActivityEdge bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Determines which ActivityEdges will realize the specified flow." to
				"Determines which ActivityEdges will realize the specified flow." }
			}
		}
		ref realizingConnector to realizingConnector bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Determines which Connectors will realize the specified flow." to
				"Determines which Connectors will realize the specified flow." }
			}
		}
		ref realizingMessage to realizingMessage bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Determines which Messages will realize the specified flow." to
				"Determines which Messages will realize the specified flow." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An information flow specifies that one or more information items circulates from its sources to its targets. Information flows require some kind of information channel for transmitting information items from the source to the destination. An information channel is represented in various ways depending on the nature of its sources and targets. It may be represented by connectors, links, associations, or even dependencies. For example, if the source and destination are parts in some composite structure such as a collaboration, then the information channel is likely to be represented by a connector between them. Or, if the source and target are objects (which are a kind of instance specification), they may be represented by a link that joins the two, and so on."
			to
			"An information flow specifies that one or more information items circulates from its sources to its targets. Information flows require some kind of information channel for transmitting information items from the source to the destination. An information channel is represented in various ways depending on the nature of its sources and targets. It may be represented by connectors, links, associations, or even dependencies. For example, if the source and destination are parts in some composite structure such as a collaboration, then the information channel is likely to be represented by a connector between them. Or, if the source and target are objects (which are a kind of instance specification), they may be represented by a link that joins the two, and so on."
			}
		}
	} ;
	ReadExtentAction to ReadExtentAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The runtime instances of the classifier." to
				"The runtime instances of the classifier." }
			} ;
			subsets to subsets
		}
		ref classifier to classifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The classifier whose instances are to be retrieved." to
				"The classifier whose instances are to be retrieved." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read extent action is an action that retrieves the current instances of a classifier." to
			"A read extent action is an action that retrieves the current instances of a classifier." }
		}
	} ;
	ReclassifyObjectAction to ReclassifyObjectAction {
		att isReplaceAll to isReplaceAll bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies whether existing classifiers should be removed before adding the new classifiers." to
				"Specifies whether existing classifiers should be removed before adding the new classifiers." }
			}
		}
		ref oldClassifier to oldClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A set of classifiers to be removed from the classifiers of the object."
				to "A set of classifiers to be removed from the classifiers of the object." }
			}
		}
		ref newClassifier to newClassifier bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A set of classifiers to be added to the classifiers of the object." to
				"A set of classifiers to be added to the classifiers of the object." }
			}
		}
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Holds the object to be reclassified." to
				"Holds the object to be reclassified." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A reclassify object action is an action that changes which classifiers classify an object." to
			"A reclassify object action is an action that changes which classifiers classify an object." }
		}
	} ;
	ReadIsClassifiedObjectAction to ReadIsClassifiedObjectAction {
		att isDirect to isDirect bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether the classifier must directly classify the input object." to
				"Indicates whether the classifier must directly classify the input object." }
			}
		}
		ref classifier to classifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The classifier against which the classification of the input object is tested." to
				"The classifier against which the classification of the input object is tested." }
			}
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "After termination of the action, will hold the result of the test." to
				"After termination of the action, will hold the result of the test." }
			} ;
			subsets to subsets
		}
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Holds the object whose classification is to be tested." to
				"Holds the object whose classification is to be tested." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read is classified object action is an action that determines whether a runtime object is classified by a given classifier."
			to
			"A read is classified object action is an action that determines whether a runtime object is classified by a given classifier."
			}
		}
	} ;
	StartClassifierBehaviorAction to StartClassifierBehaviorAction {
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Holds the object on which to start the owned behavior." to
				"Holds the object on which to start the owned behavior." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A start classifier behavior action is an action that starts the classifier behavior of the input." to
			"A start classifier behavior action is an action that starts the classifier behavior of the input." }
		}
	} ;
	ReadLinkObjectEndAction to ReadLinkObjectEndAction {
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the input pin from which the link object is obtained." to
				"Gives the input pin from which the link object is obtained." }
			} ;
			subsets to subsets
		}
		ref end to end bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Link end to be read." to "Link end to be read." }
			}
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Pin where the result value is placed." to
				"Pin where the result value is placed." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read link object end action is an action that retrieves an end object from a link object." to
			"A read link object end action is an action that retrieves an end object from a link object." }
		}
	} ;
	ReadLinkObjectEndQualifierAction to ReadLinkObjectEndQualifierAction {
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the input pin from which the link object is obtained." to
				"Gives the input pin from which the link object is obtained." }
			} ;
			subsets to subsets
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Pin where the result value is placed." to
				"Pin where the result value is placed." }
			} ;
			subsets to subsets
		}
		ref qualifier to qualifier bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The attribute representing the qualifier to be read." to
				"The attribute representing the qualifier to be read." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A read link object end qualifier action is an action that retrieves a qualifier end value from a link object." to
			"A read link object end qualifier action is an action that retrieves a qualifier end value from a link object." }
		}
	} ;
	CreateLinkObjectAction to CreateLinkObjectAction {
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A create link object action creates a link object." to
			"A create link object action creates a link object." }
		}
	} ;
	AcceptEventAction to AcceptEventAction {
		att isUnmarshall to isUnmarshall bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event."
				to
				"Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event."
				}
			}
		}
		ref result to result bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved."
				to
				"Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved."
				}
			} ;
			subsets to subsets
		}
		ref trigger to trigger bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted."
				to
				"The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A accept event action is an action that waits for the occurrence of an event meeting specified conditions." to
			"A accept event action is an action that waits for the occurrence of an event meeting specified conditions." }
		}
	} ;
	AcceptCallAction to AcceptCallAction {
		ref returnInformation to returnInformation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model."
				to
				"Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An accept call action is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the reply action necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects."
			to
			"An accept call action is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the reply action necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects."
			}
		}
	} ;
	ReplyAction to ReplyAction {
		ref replyToCall to replyToCall bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The trigger specifying the operation whose call is being replied to." to
				"The trigger specifying the operation whose call is being replied to." }
			}
		}
		ref returnInformation to returnInformation bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A pin containing the return information value produced by an earlier AcceptCallAction." to
				"A pin containing the return information value produced by an earlier AcceptCallAction." }
			} ;
			subsets to subsets
		}
		ref replyValue to replyValue bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of pins containing the reply values of the operation. These values are returned to the caller." to
				"A list of pins containing the reply values of the operation. These values are returned to the caller." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A reply action is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call."
			to
			"A reply action is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call."
			}
		}
	} ;
	UnmarshallAction to UnmarshallAction {
		ref result to result bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The values of the structural features of the input object." to
				"The values of the structural features of the input object." }
			} ;
			subsets to subsets
		}
		ref unmarshallType to unmarshallType bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The type of the object to be unmarshalled." to
				"The type of the object to be unmarshalled." }
			}
		}
		ref object to object bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The object to be unmarshalled." to "The object to be unmarshalled." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An unmarshall action is an action that breaks an object of a known type into outputs each of which is equal to a value from a structural feature of the object."
			to
			"An unmarshall action is an action that breaks an object of a known type into outputs each of which is equal to a value from a structural feature of the object."
			}
		}
	} ;
	ReduceAction to ReduceAction {
		ref reducer to reducer bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection."
				to
				"Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection."
				}
			}
		}
		ref result to result bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Gives the output pin on which the result is put." to
				"Gives the output pin on which the result is put." }
			} ;
			subsets to subsets
		}
		ref collection to collection bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The collection to be reduced." to "The collection to be reduced." }
			} ;
			subsets to subsets
		}
		att isOrdered to isOrdered bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements."
				to
				"Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A reduce action is an action that reduces a collection to a single value by combining the elements of the collection."
			to
			"A reduce action is an action that reduces a collection to a single value by combining the elements of the collection."
			}
		}
	} ;
	JoinNode to JoinNode {
		att isCombineDuplicate to isCombineDuplicate bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether tokens having objects with the same identity are combined into one by the join." to
				"Tells whether tokens having objects with the same identity are combined into one by the join." }
			}
		}
		ref joinSpec to joinSpec bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A specification giving the conditions under which the join with emit a token. Default is \"and\"." to
				"A specification giving the conditions under which the join with emit a token. Default is \"and\"." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A join node is a control node that synchronizes multiple flows.\r\nJoin nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token."
			to
			"A join node is a control node that synchronizes multiple flows.\r\nJoin nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token."
			}
		}
	} ;
	DataStoreNode to DataStoreNode
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "A data store node is a central buffer node for non-transient information."
			to "A data store node is a central buffer node for non-transient information." }
		}
	} ;
	ObjectFlow to ObjectFlow {
		att isMulticast to isMulticast bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Tells whether the objects in the flow are passed by multicasting." to
				"Tells whether the objects in the flow are passed by multicasting." }
			}
		}
		att isMultireceive to isMultireceive bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Tells whether the objects in the flow are gathered from respondents to multicasting." to
				"Tells whether the objects in the flow are gathered from respondents to multicasting." }
			}
		}
		ref transformation to transformation bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Changes or replaces data tokens flowing along edge." to
				"Changes or replaces data tokens flowing along edge." }
			}
		}
		ref selection to selection bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Selects tokens from a source object node." to
				"Selects tokens from a source object node." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An object flow is an activity edge that can have objects or data passing along it.\r\nObject flows have support for multicast/receive, token selection from object nodes, and transformation of tokens."
			to
			"An object flow is an activity edge that can have objects or data passing along it.\r\nObject flows have support for multicast/receive, token selection from object nodes, and transformation of tokens."
			}
		}
	} ;
	ConditionalNode to ConditionalNode {
		att isDeterminate to isDeterminate bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "If true, the modeler asserts that at most one test will succeed." to
				"If true, the modeler asserts that at most one test will succeed." }
			}
		}
		att isAssured to isAssured bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "If true, the modeler asserts that at least one test will succeed." to
				"If true, the modeler asserts that at least one test will succeed." }
			}
		}
		ref clause to clause bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Set of clauses composing the conditional." to
				"Set of clauses composing the conditional." }
			} ;
			subsets to subsets
		}
		ref result to result bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins that constitute the data flow outputs of the conditional." to
				"A list of output pins that constitute the data flow outputs of the conditional." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives."
			to
			"A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives."
			}
		}
	} ;
	Clause to Clause {
		ref test to test bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A nested activity fragment with a designated output pin that specifies the result of the test." to
				"A nested activity fragment with a designated output pin that specifies the result of the test." }
			}
		}
		ref body to body bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true."
				to
				"A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true."
				}
			}
		}
		ref predecessorClause to predecessorClause bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A set of clauses whose tests must all evaluate false before the current clause can be tested." to
				"A set of clauses whose tests must all evaluate false before the current clause can be tested." }
			}
		}
		ref successorClause to successorClause bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A set of clauses which may not be tested unless the current clause tests false." to
				"A set of clauses which may not be tested unless the current clause tests false." }
			}
		}
		ref decider to decider bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed."
				to
				"An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed."
				}
			}
		}
		ref bodyOutput to bodyOutput bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body."
				to
				"A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true."
			to
			"A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true."
			}
		}
	} ;
	LoopNode to LoopNode {
		att isTestedFirst to isTestedFirst bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"If true, the test is performed before the first execution of the body.\nIf false, the body is executed once before the test is performed.\n"
				to
				"If true, the test is performed before the first execution of the body.\nIf false, the body is executed once before the test is performed.\n"
				}
			}
		}
		ref bodyPart to bodyPart bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value."
				to
				"The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value."
				}
			}
		}
		ref setupPart to setupPart bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of nodes and edges that initialize values or perform other setup computations for the loop." to
				"The set of nodes and edges that initialize values or perform other setup computations for the loop." }
			}
		}
		ref decider to decider bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body."
				to
				"An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body."
				}
			}
		}
		ref test to test bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed."
				to
				"The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed."
				}
			}
		}
		ref result to result bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins that constitute the data flow output of the entire loop." to
				"A list of output pins that constitute the data flow output of the entire loop." }
			} ;
			subsets to subsets
		}
		ref loopVariable to loopVariable bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop."
				to
				"A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop."
				}
			}
		}
		ref bodyOutput to bodyOutput bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits."
				to
				"A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits."
				}
			}
		}
		ref loopVariableInput to loopVariableInput bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A list of values that are moved into the loop variable pins before the first iteration of the loop." to
				"A list of values that are moved into the loop variable pins before the first iteration of the loop." }
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A loop node is a structured activity node that represents a loop with setup, test, and body sections." to
			"A loop node is a structured activity node that represents a loop with setup, test, and body sections." }
		}
	} ;
	ExpansionNode to ExpansionNode {
		ref regionAsOutput to regionAsOutput bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The expansion region for which the node is an output." to
				"The expansion region for which the node is an output." }
			}
		}
		ref regionAsInput to regionAsInput bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The expansion region for which the node is an input." to
				"The expansion region for which the node is an input." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region."
			to
			"An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region."
			}
		}
	} ;
	ExpansionRegion to ExpansionRegion {
		att mode to mode bounds (1,1) to (1,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The way in which the executions interact:\r\nparallel: all interactions are independent\r\niterative: the interactions occur in order of the elements\r\nstream: a stream of values flows into a single execution\r\n"
				to
				"The way in which the executions interact:\r\nparallel: all interactions are independent\r\niterative: the interactions occur in order of the elements\r\nstream: a stream of values flows into a single execution\r\n"
				}
			}
		}
		ref inputElement to inputElement bounds (1,-1) to (1,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An object node that holds a separate element of the input collection during each of the multiple executions of the region."
				to
				"An object node that holds a separate element of the input collection during each of the multiple executions of the region."
				}
			}
		}
		ref outputElement to outputElement bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete."
				to
				"An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An expansion region is a structured activity region that executes multiple times corresponding to elements of an input collection."
			to
			"An expansion region is a structured activity region that executes multiple times corresponding to elements of an input collection."
			}
		}
	} ;
	ProtocolTransition to ProtocolTransition {
		ref postCondition to postCondition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.\r\n"
				to
				"Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.\r\n"
				}
			} ;
			subsets to subsets
		}
		ref referred to referred bounds (0,-1) to (0,-1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"This association refers to the associated operation. It is derived from the operation of the call trigger when applicable."
				to
				"This association refers to the associated operation. It is derived from the operation of the call trigger when applicable."
				}
			}
		}
		ref preCondition to preCondition bounds (0,1) to (0,1)
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Specifies the precondition of the transition. It specifies the condition that should be verified before triggering the transition. This guard condition added to the source state will be evaluated as part of the precondition of the operation referred by the transition if any."
				to
				"Specifies the precondition of the transition. It specifies the condition that should be verified before triggering the transition. This guard condition added to the source state will be evaluated as part of the precondition of the operation referred by the transition if any."
				}
			} ;
			subsets to subsets
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A protocol transition specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine."
			to
			"A protocol transition specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine."
			}
		}
	} ;
	AssociationClass to AssociationClass
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A model element that has both association and class properties. An AssociationClass can be seen as an association that also has class properties, or as a class that also has association properties. It not only connects a set of classifiers but also defines a set of features that belong to the relationship itself and not to any of the classifiers."
			to
			"A model element that has both association and class properties. An AssociationClass can be seen as an association that also has class properties, or as a class that also has association properties. It not only connects a set of classifiers but also defines a set of features that belong to the relationship itself and not to any of the classifiers."
			}
		}
	}
}

dataType {
	Integer to Integer oldInstanceType ^int newInstanceType ^int
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "An integer is a primitive type representing integer values." to
			"An integer is a primitive type representing integer values." }
		}
	} ;
	Boolean to Boolean oldInstanceType ^boolean newInstanceType ^boolean
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A Boolean type is used for logical expression, consisting of the predefined values true and false." to
			"A Boolean type is used for logical expression, consisting of the predefined values true and false." }
		}
	} ;
	String to String oldInstanceType "java.lang.String" newInstanceType "java.lang.String"
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."
			to
			"A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."
			}
		}
	} ;
	UnlimitedNatural to UnlimitedNatural oldInstanceType ^int newInstanceType ^int
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"An unlimited natural is a primitive type representing unlimited natural values." to
			"An unlimited natural is a primitive type representing unlimited natural values." }
		}
	}
}

enumModification {
	VisibilityKind to VisibilityKind {
		public to public oldLiteral public to public oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A public element is visible to all elements that can access the contents of the namespace that owns it." to
				"A public element is visible to all elements that can access the contents of the namespace that owns it." }
			}
		} ;
		private to private oldLiteral private to private oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "A private element is only visible inside the namespace that owns it." to
				"A private element is only visible inside the namespace that owns it." }
			}
		} ;
		protected to protected oldLiteral protected to protected oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A protected element is visible to elements that have a generalization relationship to the namespace that owns it."
				to
				"A protected element is visible to elements that have a generalization relationship to the namespace that owns it."
				}
			}
		} ;
		^package to ^package oldLiteral ^package to ^package oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible."
				to
				"A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model."
			to
			"VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model." }
		}
	} ;
	TransitionKind to TransitionKind {
		internal to internal oldLiteral internal to internal oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Implies that the transition, if triggered, occurs without exiting or entering the source state. Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked. An internal transition can be taken even if the state machine is in one or more regions nested within this state."
				to
				"Implies that the transition, if triggered, occurs without exiting or entering the source state. Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked. An internal transition can be taken even if the state machine is in one or more regions nested within this state."
				}
			}
		} ;
		local to local oldLiteral local to local oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Implies that the transition, if triggered, will not exit the composite (source) state, but it will apply to any state within the composite state, and these will be exited and entered."
				to
				"Implies that the transition, if triggered, will not exit the composite (source) state, but it will apply to any state within the composite state, and these will be exited and entered."
				}
			}
		} ;
		external to external oldLiteral external to external oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Implies that the transition, if triggered, will exit the composite (source) state." to
				"Implies that the transition, if triggered, will exit the composite (source) state." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"TransitionKind is an enumeration type.\r\nkind=#local implies owner.source.isComposite\r\nkind=#external implies owner.source.isComposite"
			to
			"TransitionKind is an enumeration type.\r\nkind=#local implies owner.source.isComposite\r\nkind=#external implies owner.source.isComposite"
			}
		} ;
		"http://www.eclipse.org/emf/2002/Ecore" to "http://www.eclipse.org/emf/2002/Ecore" detailsEntry {
			constraints to constraints oldValue "state_is_local state_is_external" to "state_is_local state_is_external" }
		}
	} ;
	PseudostateKind to PseudostateKind {
		initial to initial oldLiteral initial to initial oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An initial pseudostate represents a default vertex that is the source for a single transition to the default state of a composite state. There can be at most one initial vertex in a region. The outgoing transition from the initial vertex may have a behavior, but not a trigger or guard."
				to
				"An initial pseudostate represents a default vertex that is the source for a single transition to the default state of a composite state. There can be at most one initial vertex in a region. The outgoing transition from the initial vertex may have a behavior, but not a trigger or guard."
				}
			}
		} ;
		deepHistory to deepHistory oldLiteral deepHistory to deepHistory oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"DeepHistory represents the most recent active configuration of the composite state that directly contains this pseudostate; e.g. the state configuration that was active when the composite state was last exited. A composite state can have at most one deep history vertex. At most one transition may originate from the history connector to the default deep history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a deep history are performed."
				to
				"DeepHistory represents the most recent active configuration of the composite state that directly contains this pseudostate; e.g. the state configuration that was active when the composite state was last exited. A composite state can have at most one deep history vertex. At most one transition may originate from the history connector to the default deep history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a deep history are performed."
				}
			}
		} ;
		shallowHistory to shallowHistory oldLiteral shallowHistory to shallowHistory oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"ShallowHistory represents the most recent active substate of its containing state (but not the substates of that substate). A composite state can have at most one shallow history vertex. A transition coming into the shallow history vertex is equivalent to a transition coming into the most recent active substate of a state. At most one transition may originate from the history connector to the default shallow history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a shallow history are performed."
				to
				"ShallowHistory represents the most recent active substate of its containing state (but not the substates of that substate). A composite state can have at most one shallow history vertex. A transition coming into the shallow history vertex is equivalent to a transition coming into the most recent active substate of a state. At most one transition may originate from the history connector to the default shallow history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a shallow history are performed."
				}
			}
		} ;
		join to join oldLiteral join to join oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Join vertices serve to merge several transitions emanating from source vertices in different orthogonal regions. The transitions entering a join vertex cannot have guards or triggers."
				to
				"Join vertices serve to merge several transitions emanating from source vertices in different orthogonal regions. The transitions entering a join vertex cannot have guards or triggers."
				}
			}
		} ;
		fork to fork oldLiteral fork to fork oldValue 4 to 4
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\r\n(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers."
				to
				"Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\r\n(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers."
				}
			}
		} ;
		junction to junction oldLiteral junction to junction oldValue 5 to 5
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted \'else\' may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below)."
				to
				"Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted \'else\' may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below)."
				}
			}
		} ;
		choice to choice oldLiteral choice to choice oldValue 6 to 6
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing transitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths such that the decision on which path to take may be a function of the results of prior actions performed in the same run-tocompletion step. If more than one of the guards evaluates to true, an arbitrary one is selected. If none of the guards evaluates to true, then the model is considered ill-formed. (To avoid this, it is recommended to define one outgoing transition with the predefined else guard for every choice vertex.) Choice vertices should be distinguished from static branch points that are based on junction points (described above)."
				to
				"Choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing transitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths such that the decision on which path to take may be a function of the results of prior actions performed in the same run-tocompletion step. If more than one of the guards evaluates to true, an arbitrary one is selected. If none of the guards evaluates to true, then the model is considered ill-formed. (To avoid this, it is recommended to define one outgoing transition with the predefined else guard for every choice vertex.) Choice vertices should be distinguished from static branch points that are based on junction points (described above)."
				}
			}
		} ;
		entryPoint to entryPoint oldLiteral entryPoint to entryPoint oldValue 7 to 7
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An entry point pseudostate is an entry point of a state machine or composite state. In each region of the state machine or composite state it has a single transition to a vertex within the same region."
				to
				"An entry point pseudostate is an entry point of a state machine or composite state. In each region of the state machine or composite state it has a single transition to a vertex within the same region."
				}
			}
		} ;
		exitPoint to exitPoint oldLiteral exitPoint to exitPoint oldValue 8 to 8
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"An exit point pseudostate is an exit point of a state machine or composite state. Entering an exit point within any region of the composite state or state machine referenced by a submachine state implies the exit of this composite state or submachine state and the triggering of the transition that has this exit point as source in the state machine enclosing the submachine or composite state."
				to
				"An exit point pseudostate is an exit point of a state machine or composite state. Entering an exit point within any region of the composite state or state machine referenced by a submachine state implies the exit of this composite state or submachine state and the triggering of the transition that has this exit point as source in the state machine enclosing the submachine or composite state."
				}
			}
		} ;
		terminate to terminate oldLiteral terminate to terminate oldValue 9 to 9
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Entering a terminate pseudostate implies that the execution of this state machine by means of its context object is terminated. The state machine does not exit any states nor does it perform any exit actions other than those associated with the transition leading to the terminate pseudostate. Entering a terminate pseudostate is equivalent to invoking a DestroyObjectAction."
				to
				"Entering a terminate pseudostate implies that the execution of this state machine by means of its context object is terminated. The state machine does not exit any states nor does it perform any exit actions other than those associated with the transition leading to the terminate pseudostate. Entering a terminate pseudostate is equivalent to invoking a DestroyObjectAction."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "PseudostateKind is an enumeration type." to
			"PseudostateKind is an enumeration type." }
		}
	} ;
	ConnectorKind to ConnectorKind {
		assembly to assembly oldLiteral assembly to assembly oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the connector is an assembly connector." to
				"Indicates that the connector is an assembly connector." }
			}
		} ;
		delegation to delegation oldLiteral delegation to delegation oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the connector is a delegation connector." to
				"Indicates that the connector is a delegation connector." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "ConnectorKind is an enumeration type." to
			"ConnectorKind is an enumeration type." }
		}
	} ;
	CallConcurrencyKind to CallConcurrencyKind {
		sequential to sequential oldLiteral sequential to sequential oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once."
				to
				"No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once."
				}
			}
		} ;
		guarded to guarded oldLiteral guarded to guarded oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks."
				to
				"Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks."
				}
			}
		} ;
		concurrent to concurrent oldLiteral concurrent to concurrent oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently."
				to
				"Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "CallConcurrencyKind is an enumeration type." to
			"CallConcurrencyKind is an enumeration type." }
		}
	} ;
	AggregationKind to AggregationKind {
		none to none oldLiteral none to none oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the property has no aggregation." to
				"Indicates that the property has no aggregation." }
			}
		} ;
		shared to shared oldLiteral shared to shared oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the property has a shared aggregation." to
				"Indicates that the property has a shared aggregation." }
			}
		} ;
		composite to composite oldLiteral composite to composite oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts)."
				to
				"Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts)."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property."
			to
			"AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property."
			}
		}
	} ;
	ParameterDirectionKind to ParameterDirectionKind {
		in to in oldLiteral in to in oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that parameter values are passed into the behavioral element by the caller." to
				"Indicates that parameter values are passed into the behavioral element by the caller." }
			}
		} ;
		inout to inout oldLiteral inout to inout oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element."
				to
				"Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element."
				}
			}
		} ;
		out to out oldLiteral out to out oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that parameter values are passed from a behavioral element out to the caller." to
				"Indicates that parameter values are passed from a behavioral element out to the caller." }
			}
		} ;
		return to return oldLiteral return to return oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that parameter values are passed as return values from a behavioral element back to the caller." to
				"Indicates that parameter values are passed as return values from a behavioral element back to the caller." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters." to
			"Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters." }
		}
	} ;
	ParameterEffectKind to ParameterEffectKind {
		create to create oldLiteral create to create oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the behavior creates values." to
				"Indicates that the behavior creates values." }
			}
		} ;
		read to read oldLiteral read to read oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the behavior reads values." to
				"Indicates that the behavior reads values." }
			}
		} ;
		update to update oldLiteral update to update oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the behavior updates values." to
				"Indicates that the behavior updates values." }
			}
		} ;
		delete to delete oldLiteral delete to delete oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that the behavior deletes values." to
				"Indicates that the behavior deletes values." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"The datatype ParameterEffectKind is an enumeration that indicates the effect of a behavior on values passed in or out of its parameters."
			to
			"The datatype ParameterEffectKind is an enumeration that indicates the effect of a behavior on values passed in or out of its parameters."
			}
		}
	} ;
	ObjectNodeOrderingKind to ObjectNodeOrderingKind {
		unordered to unordered oldLiteral unordered to unordered oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that object node tokens are unordered." to
				"Indicates that object node tokens are unordered." }
			}
		} ;
		ordered to ordered oldLiteral ordered to ordered oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "Indicates that object node tokens are ordered." to
				"Indicates that object node tokens are ordered." }
			}
		} ;
		LIFO to LIFO oldLiteral LIFO to LIFO oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that object node tokens are queued in a last in, first out manner." to
				"Indicates that object node tokens are queued in a last in, first out manner." }
			}
		} ;
		FIFO to FIFO oldLiteral FIFO to FIFO oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"Indicates that object node tokens are queued in a first in, first out manner." to
				"Indicates that object node tokens are queued in a first in, first out manner." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"ObjectNodeOrderingKind is an enumeration indicating queuing order within a node." to
			"ObjectNodeOrderingKind is an enumeration indicating queuing order within a node." }
		}
	} ;
	MessageKind to MessageKind {
		complete to complete oldLiteral complete to complete oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "sendEvent and receiveEvent are present" to
				"sendEvent and receiveEvent are present" }
			}
		} ;
		lost to lost oldLiteral lost to lost oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "sendEvent present and receiveEvent absent" to
				"sendEvent present and receiveEvent absent" }
			}
		} ;
		found to found oldLiteral found to found oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "sendEvent absent and receiveEvent present" to
				"sendEvent absent and receiveEvent present" }
			}
		} ;
		unknown to unknown oldLiteral unknown to unknown oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "sendEvent and receiveEvent absent (should not appear)" to
				"sendEvent and receiveEvent absent (should not appear)" }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue "This is an enumerated type that identifies the type of message." to
			"This is an enumerated type that identifies the type of message." }
		}
	} ;
	MessageSort to MessageSort {
		synchCall to synchCall oldLiteral synchCall to synchCall oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The message was generated by a synchronous call to an operation." to
				"The message was generated by a synchronous call to an operation." }
			}
		} ;
		asynchCall to asynchCall oldLiteral asynchCall to asynchCall oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\r\n= false.\r\n"
				to
				"The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\r\n= false.\r\n"
				}
			}
		} ;
		asynchSignal to asynchSignal oldLiteral asynchSignal to asynchSignal oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The message was generated by an asynchronous send action." to
				"The message was generated by an asynchronous send action." }
			}
		} ;
		createMessage to createMessage oldLiteral createMessage to createMessage oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The message designating the creation of another lifeline object." to
				"The message designating the creation of another lifeline object." }
			}
		} ;
		deleteMessage to deleteMessage oldLiteral deleteMessage to deleteMessage oldValue 4 to 4
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The message designating the termination of another lifeline." to
				"The message designating the termination of another lifeline." }
			}
		} ;
		reply to reply oldLiteral reply to reply oldValue 5 to 5
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The message is a reply message to an operation call." to
				"The message is a reply message to an operation call." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"This is an enumerated type that identifies the type of communication action that was used to generate the message."
			to
			"This is an enumerated type that identifies the type of communication action that was used to generate the message."
			}
		}
	} ;
	InteractionOperatorKind to InteractionOperatorKind {
		seq to seq oldLiteral seq to seq oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator seq designates that the CombinedFragment represents a weak sequencing between the behaviors of the operands."
				to
				"The interactionOperator seq designates that the CombinedFragment represents a weak sequencing between the behaviors of the operands."
				}
			}
		} ;
		alt to alt oldLiteral alt to alt oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard."
				to
				"The interactionOperator alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard."
				}
			}
		} ;
		opt to opt oldLiteral opt to opt oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator opt designates that the CombinedFragment represents a choice of behavior where either the (sole) operand happens or nothing happens. An option is semantically equivalent to an alternative CombinedFragment where there is one operand with non-empty content and the second operand is empty."
				to
				"The interactionOperator opt designates that the CombinedFragment represents a choice of behavior where either the (sole) operand happens or nothing happens. An option is semantically equivalent to an alternative CombinedFragment where there is one operand with non-empty content and the second operand is empty."
				}
			}
		} ;
		break to break oldLiteral break to break oldValue 3 to 3
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator break designates that the CombinedFragment represents a breaking scenario in the sense that the operand is a scenario that is performed instead of the remainder of the enclosing InteractionFragment. A break operator with a guard is chosen when the guard is true and the rest of the enclosing Interaction Fragment is ignored. When the guard of the break operand is false, the break operand is ignored and the rest of the enclosing InteractionFragment is chosen. The choice between a break operand without a guard and the rest of the enclosing InteractionFragment is done non-deterministically."
				to
				"The interactionOperator break designates that the CombinedFragment represents a breaking scenario in the sense that the operand is a scenario that is performed instead of the remainder of the enclosing InteractionFragment. A break operator with a guard is chosen when the guard is true and the rest of the enclosing Interaction Fragment is ignored. When the guard of the break operand is false, the break operand is ignored and the rest of the enclosing InteractionFragment is chosen. The choice between a break operand without a guard and the rest of the enclosing InteractionFragment is done non-deterministically."
				}
			}
		} ;
		par to par oldLiteral par to par oldValue 4 to 4
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator par designates that the CombinedFragment represents a parallel merge between the behaviors of the operands. The OccurrenceSpecifications of the different operands can be interleaved in any way as long as the ordering imposed by each operand as such is preserved."
				to
				"The interactionOperator par designates that the CombinedFragment represents a parallel merge between the behaviors of the operands. The OccurrenceSpecifications of the different operands can be interleaved in any way as long as the ordering imposed by each operand as such is preserved."
				}
			}
		} ;
		strict to strict oldLiteral strict to strict oldValue 5 to 5
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator strict designates that the CombinedFragment represents a strict sequencing between the behaviors of the operands. The semantics of strict sequencing defines a strict ordering of the operands on the first level within the CombinedFragment with interactionOperator strict. Therefore OccurrenceSpecifications within contained CombinedFragment will not directly be compared with other OccurrenceSpecifications of the enclosing CombinedFragment."
				to
				"The interactionOperator strict designates that the CombinedFragment represents a strict sequencing between the behaviors of the operands. The semantics of strict sequencing defines a strict ordering of the operands on the first level within the CombinedFragment with interactionOperator strict. Therefore OccurrenceSpecifications within contained CombinedFragment will not directly be compared with other OccurrenceSpecifications of the enclosing CombinedFragment."
				}
			}
		} ;
		loop to loop oldLiteral loop to loop oldValue 6 to 6
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times."
				to
				"The interactionOperator loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times."
				}
			}
		} ;
		critical to critical oldLiteral critical to critical oldValue 7 to 7
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator critical designates that the CombinedFragment represents a critical region. A critical region means that the traces of the region cannot be interleaved by other OccurrenceSpecifications (on those Lifelines covered by the region). This means that the region is treated atomically by the enclosing fragment when determining the set of valid traces. Even though enclosing CombinedFragments may imply that some OccurrenceSpecifications may interleave into the region, such as e.g. with par-operator, this is prevented by defining a region."
				to
				"The interactionOperator critical designates that the CombinedFragment represents a critical region. A critical region means that the traces of the region cannot be interleaved by other OccurrenceSpecifications (on those Lifelines covered by the region). This means that the region is treated atomically by the enclosing fragment when determining the set of valid traces. Even though enclosing CombinedFragments may imply that some OccurrenceSpecifications may interleave into the region, such as e.g. with par-operator, this is prevented by defining a region."
				}
			}
		} ;
		neg to neg oldLiteral neg to neg oldValue 8 to 8
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator neg designates that the CombinedFragment represents traces that are defined to be invalid."
				to
				"The interactionOperator neg designates that the CombinedFragment represents traces that are defined to be invalid."
				}
			}
		} ;
		assert to assert oldLiteral assert to assert oldValue 9 to 9
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator assert designates that the CombinedFragment represents an assertion. The sequences of the operand of the assertion are the only valid continuations. All other continuations result in an invalid trace."
				to
				"The interactionOperator assert designates that the CombinedFragment represents an assertion. The sequences of the operand of the assertion are the only valid continuations. All other continuations result in an invalid trace."
				}
			}
		} ;
		ignore to ignore oldLiteral ignore to ignore oldValue 10 to 10
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interacionOperator ignore designates that there are some message types that are not shown within this combined fragment. These message types can be considered insignificant and are implicitly ignored if they appear in a corresponding execution. Alternatively, one can understand ignore to mean that the message types that are ignored can appear anywhere in the traces."
				to
				"The interacionOperator ignore designates that there are some message types that are not shown within this combined fragment. These message types can be considered insignificant and are implicitly ignored if they appear in a corresponding execution. Alternatively, one can understand ignore to mean that the message types that are ignored can appear anywhere in the traces."
				}
			}
		} ;
		consider to consider oldLiteral consider to consider oldValue 11 to 11
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The interactionOperator consider designates which messages should be considered within this combined fragment. This is equivalent to defining every other message to be ignored."
				to
				"The interactionOperator consider designates which messages should be considered within this combined fragment. This is equivalent to defining every other message to be ignored."
				}
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"InteractionOperatorKind is an enumeration designating the different kinds of operators of combined fragments. The interaction operand defines the type of operator of a combined fragment."
			to
			"InteractionOperatorKind is an enumeration designating the different kinds of operators of combined fragments. The interaction operand defines the type of operator of a combined fragment."
			}
		}
	} ;
	ExpansionKind to ExpansionKind {
		parallel to parallel oldLiteral parallel to parallel oldValue 0 to 0
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue "The executions are independent. They may be executed concurrently." to
				"The executions are independent. They may be executed concurrently." }
			}
		} ;
		iterative to iterative oldLiteral iterative to iterative oldValue 1 to 1
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"The executions are dependent and must be executed one at a time, in order of the collection elements." to
				"The executions are dependent and must be executed one at a time, in order of the collection elements." }
			}
		} ;
		stream to stream oldLiteral stream to stream oldValue 2 to 2
		annotation {
			"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
				documentation to documentation oldValue
				"A stream of collection elements flows into a single execution, in order of the collection elements." to
				"A stream of collection elements flows into a single execution, in order of the collection elements." }
			}
		}
	}
	annotation {
		"http://www.eclipse.org/emf/2002/GenModel" to "http://www.eclipse.org/emf/2002/GenModel" detailsEntry {
			documentation to documentation oldValue
			"ExpansionKind is an enumeration type used to specify how multiple executions of an expansion region interact." to
			"ExpansionKind is an enumeration type used to specify how multiple executions of an expansion region interact." }
		}
	}
}